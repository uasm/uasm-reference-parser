/*
 * generated by Xtext 2.10.0
 */
grammar InternalTermDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.uasm.term.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.uasm.term.lang.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.uasm.term.lang.services.TermDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private TermDslGrammarAccess grammarAccess;

    public InternalTermDslParser(TokenStream input, TermDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Term";
   	}

   	@Override
   	protected TermDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getTermAccess().getCondTernaryExpressionParserRuleCall());
	}
	this_CondTernaryExpression_0=ruleCondTernaryExpression
	{
		$current = $this_CondTernaryExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleCondTernaryExpression
entryRuleCondTernaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondTernaryExpressionRule()); }
	iv_ruleCondTernaryExpression=ruleCondTernaryExpression
	{ $current=$iv_ruleCondTernaryExpression.current; }
	EOF;

// Rule CondTernaryExpression
ruleCondTernaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCondTernaryExpressionAccess().getImpliesExpressionParserRuleCall_0());
		}
		this_ImpliesExpression_0=ruleImpliesExpression
		{
			$current = $this_ImpliesExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getCondTernaryExpressionAccess().getCondTernaryExpressionCondAction_1_0(),
						$current);
				}
			)
			otherlv_2='?'
			{
				newLeafNode(otherlv_2, grammarAccess.getCondTernaryExpressionAccess().getQuestionMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCondTernaryExpressionAccess().getThenImpliesExpressionParserRuleCall_1_2_0());
					}
					lv_then_3_0=ruleImpliesExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCondTernaryExpressionRule());
						}
						set(
							$current,
							"then",
							lv_then_3_0,
							"org.uasm.term.lang.TermDsl.ImpliesExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getCondTernaryExpressionAccess().getColonKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCondTernaryExpressionAccess().getElseImpliesExpressionParserRuleCall_1_4_0());
					}
					lv_else_5_0=ruleImpliesExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCondTernaryExpressionRule());
						}
						set(
							$current,
							"else",
							lv_else_5_0,
							"org.uasm.term.lang.TermDsl.ImpliesExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImpliesExpressionRule()); }
	iv_ruleImpliesExpression=ruleImpliesExpression
	{ $current=$iv_ruleImpliesExpression.current; }
	EOF;

// Rule ImpliesExpression
ruleImpliesExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0());
		}
		this_OrExpression_0=ruleOrExpression
		{
			$current = $this_OrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getImpliesExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='implies'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getImpliesExpressionAccess().getOpImpliesKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImpliesExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "implies");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getImpliesExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0());
		}
		this_XorExpression_0=ruleXorExpression
		{
			$current = $this_XorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='or'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "or");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleXorExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.XorExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXorExpression
entryRuleXorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXorExpressionRule()); }
	iv_ruleXorExpression=ruleXorExpression
	{ $current=$iv_ruleXorExpression.current; }
	EOF;

// Rule XorExpression
ruleXorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getXorExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='xor'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getXorExpressionAccess().getOpXorKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXorExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "xor");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='and'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "and");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationExpressionParserRuleCall_0());
		}
		this_RelationExpression_0=ruleRelationExpression
		{
			$current = $this_RelationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='!='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleRelationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.RelationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationExpression
entryRuleRelationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationExpressionRule()); }
	iv_ruleRelationExpression=ruleRelationExpression
	{ $current=$iv_ruleRelationExpression.current; }
	EOF;

// Rule RelationExpression
ruleRelationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRelationExpressionAccess().getAddExpressionParserRuleCall_0());
		}
		this_AddExpression_0=ruleAddExpression
		{
			$current = $this_AddExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='<'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getRelationExpressionAccess().getOpLessThanSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='>'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getRelationExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='<='
						{
							newLeafNode(lv_op_2_3, grammarAccess.getRelationExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='>='
						{
							newLeafNode(lv_op_2_4, grammarAccess.getRelationExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
						    |
						lv_op_2_5='memberof'
						{
							newLeafNode(lv_op_2_5, grammarAccess.getRelationExpressionAccess().getOpMemberofKeyword_1_1_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_5, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationExpressionAccess().getRightAddExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAddExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.AddExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAddExpression
entryRuleAddExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddExpressionRule()); }
	iv_ruleAddExpression=ruleAddExpression
	{ $current=$iv_ruleAddExpression.current; }
	EOF;

// Rule AddExpression
ruleAddExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAddExpressionAccess().getMultExpressionParserRuleCall_0());
		}
		this_MultExpression_0=ruleMultExpression
		{
			$current = $this_MultExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAddExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='+'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAddExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='-'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAddExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAddExpressionAccess().getRightMultExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.MultExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultExpression
entryRuleMultExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExpressionRule()); }
	iv_ruleMultExpression=ruleMultExpression
	{ $current=$iv_ruleMultExpression.current; }
	EOF;

// Rule MultExpression
ruleMultExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getMultExpressionAccess().getPowerExpressionParserRuleCall_0());
		}
		this_PowerExpression_0=rulePowerExpression
		{
			$current = $this_PowerExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMultExpressionAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='mod'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getMultExpressionAccess().getOpModKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='div'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getMultExpressionAccess().getOpDivKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultExpressionAccess().getRightPowerExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePowerExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.PowerExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePowerExpression
entryRulePowerExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerExpressionRule()); }
	iv_rulePowerExpression=rulePowerExpression
	{ $current=$iv_rulePowerExpression.current; }
	EOF;

// Rule PowerExpression
rulePowerExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerExpressionAccess().getBinaryExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='^'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPowerExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleUnaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.uasm.term.lang.TermDsl.UnaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getBooleanNegationAction_0_0(),
						$current);
				}
			)
			(
				((
					'not'
				)
				)=>
				(
					lv_op_1_0='not'
					{
						newLeafNode(lv_op_1_0, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_0, "not");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionBasicExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleBasicExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"org.uasm.term.lang.TermDsl.BasicExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getArithmeticSignedAction_1_0(),
						$current);
				}
			)
			(
				((
					'-'
				)
				)=>
				(
					lv_op_4_0='-'
					{
						newLeafNode(lv_op_4_0, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_4_0, "-");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionBasicExpressionParserRuleCall_1_2_0());
					}
					lv_expression_5_0=ruleBasicExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"org.uasm.term.lang.TermDsl.BasicExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getBasicExpressionParserRuleCall_2());
		}
		this_BasicExpression_6=ruleBasicExpression
		{
			$current = $this_BasicExpression_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicExpression
entryRuleBasicExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicExpressionRule()); }
	iv_ruleBasicExpression=ruleBasicExpression
	{ $current=$iv_ruleBasicExpression.current; }
	EOF;

// Rule BasicExpression
ruleBasicExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicExpressionAccess().getBasicTermParserRuleCall_0());
		}
		this_BasicTerm_0=ruleBasicTerm
		{
			$current = $this_BasicTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getBasicExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getBasicExpressionAccess().getTermParserRuleCall_1_1());
			}
			this_Term_2=ruleTerm
			{
				$current = $this_Term_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getBasicExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleBasicTerm
entryRuleBasicTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicTermRule()); }
	iv_ruleBasicTerm=ruleBasicTerm
	{ $current=$iv_ruleBasicTerm.current; }
	EOF;

// Rule BasicTerm
ruleBasicTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getTupleTermParserRuleCall_0());
		}
		this_TupleTerm_0=ruleTupleTerm
		{
			$current = $this_TupleTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_1());
		}
		this_LocationTerm_1=ruleLocationTerm
		{
			$current = $this_LocationTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getComprehensionTermParserRuleCall_2());
		}
		this_ComprehensionTerm_2=ruleComprehensionTerm
		{
			$current = $this_ComprehensionTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getStructureTermParserRuleCall_3());
		}
		this_StructureTerm_3=ruleStructureTerm
		{
			$current = $this_StructureTerm_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getPickTermParserRuleCall_4());
		}
		this_PickTerm_4=rulePickTerm
		{
			$current = $this_PickTerm_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getConditionalTermParserRuleCall_5());
		}
		this_ConditionalTerm_5=ruleConditionalTerm
		{
			$current = $this_ConditionalTerm_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getCaseTermParserRuleCall_6());
		}
		this_CaseTerm_6=ruleCaseTerm
		{
			$current = $this_CaseTerm_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getRuleAsTermParserRuleCall_7());
		}
		this_RuleAsTerm_7=ruleRuleAsTerm
		{
			$current = $this_RuleAsTerm_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getReturnTermParserRuleCall_8());
		}
		this_ReturnTerm_8=ruleReturnTerm
		{
			$current = $this_ReturnTerm_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getForAllTermParserRuleCall_9());
		}
		this_ForAllTerm_9=ruleForAllTerm
		{
			$current = $this_ForAllTerm_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getExistsTermParserRuleCall_10());
		}
		this_ExistsTerm_10=ruleExistsTerm
		{
			$current = $this_ExistsTerm_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getLetTermParserRuleCall_11());
		}
		this_LetTerm_11=ruleLetTerm
		{
			$current = $this_LetTerm_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getLiteralParserRuleCall_12());
		}
		this_Literal_12=ruleLiteral
		{
			$current = $this_Literal_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getTupleLiteralParserRuleCall_13());
		}
		this_TupleLiteral_13=ruleTupleLiteral
		{
			$current = $this_TupleLiteral_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getSizeOfEnumerableTermParserRuleCall_14());
		}
		this_SizeOfEnumerableTerm_14=ruleSizeOfEnumerableTerm
		{
			$current = $this_SizeOfEnumerableTerm_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTupleTerm
entryRuleTupleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTermRule()); }
	iv_ruleTupleTerm=ruleTupleTerm
	{ $current=$iv_ruleTupleTerm.current; }
	EOF;

// Rule TupleTerm
ruleTupleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleTermAccess().getTupleTermAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleTermAccess().getTermTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleTermRule());
					}
					add(
						$current,
						"term",
						lv_term_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTupleTermAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleTermAccess().getTermTermParserRuleCall_3_1_0());
					}
					lv_term_4_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleTermRule());
						}
						add(
							$current,
							"term",
							lv_term_4_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleFunctionTerm
entryRuleFunctionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTermRule()); }
	iv_ruleFunctionTerm=ruleFunctionTerm
	{ $current=$iv_ruleFunctionTerm.current; }
	EOF;

// Rule FunctionTerm
ruleFunctionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionTermAccess().getFunctionTermAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionTermAccess().getFunctionIdFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleIdFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionTermRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.uasm.term.lang.TermDsl.IdFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getFunctionTermAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionTermAccess().getArgsTermParserRuleCall_2_0_1_0());
						}
						lv_args_3_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionTermRule());
							}
							set(
								$current,
								"args",
								lv_args_3_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionTermAccess().getRightParenthesisKeyword_2_0_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionTermAccess().getArgsTupleTupleTermParserRuleCall_2_1_0());
					}
					lv_argsTuple_5_0=ruleTupleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionTermRule());
						}
						set(
							$current,
							"argsTuple",
							lv_argsTuple_5_0,
							"org.uasm.term.lang.TermDsl.TupleTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEnumTerm
entryRuleEnumTerm returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEnumTermRule()); }
	iv_ruleEnumTerm=ruleEnumTerm
	{ $current=$iv_ruleEnumTerm.current.getText(); }
	EOF;

// Rule EnumTerm
ruleEnumTerm returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getEnumTermAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleEnumerableTerm
entryRuleEnumerableTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerableTermRule()); }
	iv_ruleEnumerableTerm=ruleEnumerableTerm
	{ $current=$iv_ruleEnumerableTerm.current; }
	EOF;

// Rule EnumerableTerm
ruleEnumerableTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEnumerableTermAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerableTermAccess().getDomDomainParserRuleCall_1_0());
				}
				lv_dom_1_0=ruleDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerableTermRule());
					}
					set(
						$current,
						"dom",
						lv_dom_1_0,
						"org.uasm.term.lang.TermDsl.Domain");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableTerm
entryRuleVariableTerm returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVariableTermRule()); }
	iv_ruleVariableTerm=ruleVariableTerm
	{ $current=$iv_ruleVariableTerm.current.getText(); }
	EOF;

// Rule VariableTerm
ruleVariableTerm returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getVariableTermAccess().getIdFunctionParserRuleCall());
	}
	this_IdFunction_0=ruleIdFunction
	{
		$current.merge(this_IdFunction_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLocationTerm
entryRuleLocationTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationTermRule()); }
	iv_ruleLocationTerm=ruleLocationTerm
	{ $current=$iv_ruleLocationTerm.current; }
	EOF;

// Rule LocationTerm
ruleLocationTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getLocationTermAccess().getLocationTermAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLocationTermAccess().getFunctionFunctionTermParserRuleCall_0_1_0());
					}
					lv_function_1_0=ruleFunctionTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLocationTermRule());
						}
						set(
							$current,
							"function",
							lv_function_1_0,
							"org.uasm.term.lang.TermDsl.FunctionTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_result_2_0='result'
				{
					newLeafNode(lv_result_2_0, grammarAccess.getLocationTermAccess().getResultResultKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationTermRule());
					}
					setWithLastConsumed($current, "result", lv_result_2_0, "result");
				}
			)
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntervalLiteralParserRuleCall_0());
		}
		this_IntervalLiteral_0=ruleIntervalLiteral
		{
			$current = $this_IntervalLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_1());
		}
		this_SetLiteral_1=ruleSetLiteral
		{
			$current = $this_SetLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2());
		}
		this_ListLiteral_2=ruleListLiteral
		{
			$current = $this_ListLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBagLiteralParserRuleCall_3());
		}
		this_BagLiteral_3=ruleBagLiteral
		{
			$current = $this_BagLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_4());
		}
		this_MapLiteral_4=ruleMapLiteral
		{
			$current = $this_MapLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_5());
		}
		this_NumberLiteral_5=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_6());
		}
		this_BooleanLiteral_6=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getKernelLiteralParserRuleCall_7());
		}
		this_KernelLiteral_7=ruleKernelLiteral
		{
			$current = $this_KernelLiteral_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_8());
		}
		this_StringLiteral_8=ruleStringLiteral
		{
			$current = $this_StringLiteral_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_9());
		}
		this_CharLiteral_9=ruleCharLiteral
		{
			$current = $this_CharLiteral_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getEnumTermParserRuleCall_10());
		}
		ruleEnumTerm
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_val_1_0='true'
					{
						newLeafNode(lv_val_1_0, grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanLiteralRule());
						}
						setWithLastConsumed($current, "val", lv_val_1_0, "true");
					}
				)
			)
		)
		    |
		(
			(
				lv_val_2_0='false'
				{
					newLeafNode(lv_val_2_0, grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralRule());
					}
					setWithLastConsumed($current, "val", lv_val_2_0, "false");
				}
			)
		)
	)
;

// Entry rule entryRuleKernelLiteral
entryRuleKernelLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKernelLiteralRule()); }
	iv_ruleKernelLiteral=ruleKernelLiteral
	{ $current=$iv_ruleKernelLiteral.current; }
	EOF;

// Rule KernelLiteral
ruleKernelLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getKernelLiteralAccess().getKernelLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_val_1_0='undef'
					{
						newLeafNode(lv_val_1_0, grammarAccess.getKernelLiteralAccess().getValUndefKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKernelLiteralRule());
						}
						setWithLastConsumed($current, "val", lv_val_1_0, "undef");
					}
				)
			)
		)
		    |
		(
			(
				lv_val_2_0='self'
				{
					newLeafNode(lv_val_2_0, grammarAccess.getKernelLiteralAccess().getValSelfKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKernelLiteralRule());
					}
					setWithLastConsumed($current, "val", lv_val_2_0, "self");
				}
			)
		)
	)
;

// Entry rule entryRuleIntervalLiteral
entryRuleIntervalLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntervalLiteralRule()); }
	iv_ruleIntervalLiteral=ruleIntervalLiteral
	{ $current=$iv_ruleIntervalLiteral.current; }
	EOF;

// Rule IntervalLiteral
ruleIntervalLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntervalLiteralAccess().getIntervalLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getIntervalLiteralAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntervalLiteralAccess().getStartLiteralParserRuleCall_2_0());
				}
				lv_start_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntervalLiteralRule());
					}
					set(
						$current,
						"start",
						lv_start_2_0,
						"org.uasm.term.lang.TermDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='..'
		{
			newLeafNode(otherlv_3, grammarAccess.getIntervalLiteralAccess().getFullStopFullStopKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntervalLiteralAccess().getEndLiteralParserRuleCall_4_0());
				}
				lv_end_4_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntervalLiteralRule());
					}
					set(
						$current,
						"end",
						lv_end_4_0,
						"org.uasm.term.lang.TermDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='step'
			{
				newLeafNode(otherlv_5, grammarAccess.getIntervalLiteralAccess().getStepKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalLiteralAccess().getStepLiteralParserRuleCall_5_1_0());
					}
					lv_step_6_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalLiteralRule());
						}
						set(
							$current,
							"step",
							lv_step_6_0,
							"org.uasm.term.lang.TermDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getIntervalLiteralAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSetLiteral
entryRuleSetLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetLiteralRule()); }
	iv_ruleSetLiteral=ruleSetLiteral
	{ $current=$iv_ruleSetLiteral.current; }
	EOF;

// Rule SetLiteral
ruleSetLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSetLiteralAccess().getSetLiteralAction_0_0(),
						$current);
				}
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0());
					}
					lv_literal_2_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetLiteralRule());
						}
						add(
							$current,
							"literal",
							lv_literal_2_0,
							"org.uasm.term.lang.TermDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getSetLiteralAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0());
						}
						lv_literal_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSetLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_4_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleListLiteral
entryRuleListLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListLiteralRule()); }
	iv_ruleListLiteral=ruleListLiteral
	{ $current=$iv_ruleListLiteral.current; }
	EOF;

// Rule ListLiteral
ruleListLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getListLiteralAccess().getListLiteralAction_0_0(),
						$current);
				}
			)
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0());
					}
					lv_literal_2_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListLiteralRule());
						}
						add(
							$current,
							"literal",
							lv_literal_2_0,
							"org.uasm.term.lang.TermDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getListLiteralAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0());
						}
						lv_literal_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_4_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1_0());
			}
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleBagLiteral
entryRuleBagLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagLiteralRule()); }
	iv_ruleBagLiteral=ruleBagLiteral
	{ $current=$iv_ruleBagLiteral.current; }
	EOF;

// Rule BagLiteral
ruleBagLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBagLiteralAccess().getBagLiteralAction_0_0(),
						$current);
				}
			)
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getBagLiteralAccess().getLessThanSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0());
					}
					lv_literal_2_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagLiteralRule());
						}
						add(
							$current,
							"literal",
							lv_literal_2_0,
							"org.uasm.term.lang.TermDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getBagLiteralAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBagLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0());
						}
						lv_literal_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBagLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_4_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getBagLiteralAccess().getGreaterThanSignKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='<'
			{
				newLeafNode(otherlv_6, grammarAccess.getBagLiteralAccess().getLessThanSignKeyword_1_0());
			}
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getBagLiteralAccess().getGreaterThanSignKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleMapLiteral
entryRuleMapLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralRule()); }
	iv_ruleMapLiteral=ruleMapLiteral
	{ $current=$iv_ruleMapLiteral.current; }
	EOF;

// Rule MapLiteral
ruleMapLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getMapLiteralAccess().getMapLiteralAction_0_0(),
						$current);
				}
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0_0());
						}
						lv_literal_2_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_2_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='->'
				{
					newLeafNode(otherlv_3, grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_0_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_2_2_0());
						}
						lv_literal_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_4_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMapLiteralAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0());
						}
						lv_literal_6_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_6_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='->'
				{
					newLeafNode(otherlv_7, grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_0_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_3_3_0());
						}
						lv_literal_8_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"literal",
								lv_literal_8_0,
								"org.uasm.term.lang.TermDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_0_4());
			}
		)
		    |
		(
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_11='->'
			{
				newLeafNode(otherlv_11, grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleForAllTerm
entryRuleForAllTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForAllTermRule()); }
	iv_ruleForAllTerm=ruleForAllTerm
	{ $current=$iv_ruleForAllTerm.current; }
	EOF;

// Rule ForAllTerm
ruleForAllTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getForAllTermAccess().getForAllTermAction_0(),
					$current);
			}
		)
		otherlv_1='forall'
		{
			newLeafNode(otherlv_1, grammarAccess.getForAllTermAccess().getForallKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAllTermAccess().getVarTermVariableTermParserRuleCall_2_0());
				}
				lv_varTerm_2_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForAllTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_2_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='in'
		{
			newLeafNode(otherlv_3, grammarAccess.getForAllTermAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAllTermAccess().getInTermTermParserRuleCall_4_0());
				}
				lv_inTerm_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForAllTermRule());
					}
					add(
						$current,
						"inTerm",
						lv_inTerm_4_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getForAllTermAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForAllTermAccess().getVarTermVariableTermParserRuleCall_5_1_0());
					}
					lv_varTerm_6_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForAllTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_6_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='in'
			{
				newLeafNode(otherlv_7, grammarAccess.getForAllTermAccess().getInKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForAllTermAccess().getInTermTermParserRuleCall_5_3_0());
					}
					lv_inTerm_8_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForAllTermRule());
						}
						add(
							$current,
							"inTerm",
							lv_inTerm_8_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='holds'
		{
			newLeafNode(otherlv_9, grammarAccess.getForAllTermAccess().getHoldsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAllTermAccess().getWithTermTermParserRuleCall_7_0());
				}
				lv_withTerm_10_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForAllTermRule());
					}
					set(
						$current,
						"withTerm",
						lv_withTerm_10_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExistsTerm
entryRuleExistsTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistsTermRule()); }
	iv_ruleExistsTerm=ruleExistsTerm
	{ $current=$iv_ruleExistsTerm.current; }
	EOF;

// Rule ExistsTerm
ruleExistsTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExistsTermAccess().getExistsTermAction_0(),
					$current);
			}
		)
		otherlv_1='exists'
		{
			newLeafNode(otherlv_1, grammarAccess.getExistsTermAccess().getExistsKeyword_1());
		}
		(
			(
				lv_unique_2_0='unique'
				{
					newLeafNode(lv_unique_2_0, grammarAccess.getExistsTermAccess().getUniqueUniqueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistsTermRule());
					}
					setWithLastConsumed($current, "unique", lv_unique_2_0, "unique");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExistsTermAccess().getVarTermVariableTermParserRuleCall_3_0());
				}
				lv_varTerm_3_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistsTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_3_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getExistsTermAccess().getInKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistsTermAccess().getInTermTermParserRuleCall_5_0());
				}
				lv_inTerm_5_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistsTermRule());
					}
					add(
						$current,
						"inTerm",
						lv_inTerm_5_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getExistsTermAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistsTermAccess().getVarTermVariableTermParserRuleCall_6_1_0());
					}
					lv_varTerm_7_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistsTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_7_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='in'
			{
				newLeafNode(otherlv_8, grammarAccess.getExistsTermAccess().getInKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistsTermAccess().getInTermTermParserRuleCall_6_3_0());
					}
					lv_inTerm_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistsTermRule());
						}
						add(
							$current,
							"inTerm",
							lv_inTerm_9_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='with'
		{
			newLeafNode(otherlv_10, grammarAccess.getExistsTermAccess().getWithKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistsTermAccess().getWithTermTermParserRuleCall_8_0());
				}
				lv_withTerm_11_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistsTermRule());
					}
					set(
						$current,
						"withTerm",
						lv_withTerm_11_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSizeOfEnumerableTerm
entryRuleSizeOfEnumerableTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSizeOfEnumerableTermRule()); }
	iv_ruleSizeOfEnumerableTerm=ruleSizeOfEnumerableTerm
	{ $current=$iv_ruleSizeOfEnumerableTerm.current; }
	EOF;

// Rule SizeOfEnumerableTerm
ruleSizeOfEnumerableTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSizeOfEnumerableTermAccess().getSizeOfEnumerableTermAction_0(),
					$current);
			}
		)
		otherlv_1='|'
		{
			newLeafNode(otherlv_1, grammarAccess.getSizeOfEnumerableTermAccess().getVerticalLineKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSizeOfEnumerableTermAccess().getEnumTermEnumerableTermParserRuleCall_2_0());
				}
				lv_enumTerm_2_0=ruleEnumerableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSizeOfEnumerableTermRule());
					}
					set(
						$current,
						"enumTerm",
						lv_enumTerm_2_0,
						"org.uasm.term.lang.TermDsl.EnumerableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='|'
		{
			newLeafNode(otherlv_3, grammarAccess.getSizeOfEnumerableTermAccess().getVerticalLineKeyword_3());
		}
	)
;

// Entry rule entryRulePickTerm
entryRulePickTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPickTermRule()); }
	iv_rulePickTerm=rulePickTerm
	{ $current=$iv_rulePickTerm.current; }
	EOF;

// Rule PickTerm
rulePickTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='pick'
		{
			newLeafNode(otherlv_0, grammarAccess.getPickTermAccess().getPickKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPickTermAccess().getVarTermVariableTermParserRuleCall_1_0());
				}
				lv_varTerm_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPickTermRule());
					}
					set(
						$current,
						"varTerm",
						lv_varTerm_1_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getPickTermAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPickTermAccess().getEnumTermEnumerableTermParserRuleCall_3_0());
				}
				lv_enumTerm_3_0=ruleEnumerableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPickTermRule());
					}
					set(
						$current,
						"enumTerm",
						lv_enumTerm_3_0,
						"org.uasm.term.lang.TermDsl.EnumerableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='with'
			{
				newLeafNode(otherlv_4, grammarAccess.getPickTermAccess().getWithKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPickTermAccess().getTermTermParserRuleCall_4_1_0());
					}
					lv_term_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPickTermRule());
						}
						set(
							$current,
							"term",
							lv_term_5_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTermRule()); }
	iv_ruleConditionalTerm=ruleConditionalTerm
	{ $current=$iv_ruleConditionalTerm.current; }
	EOF;

// Rule ConditionalTerm
ruleConditionalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalTermAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTermAccess().getCondTermParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalTermAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0());
				}
				lv_thenTerm_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
					}
					set(
						$current,
						"thenTerm",
						lv_thenTerm_3_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='else'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionalTermAccess().getElseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_5_0());
				}
				lv_elseTerm_5_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
					}
					set(
						$current,
						"elseTerm",
						lv_elseTerm_5_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='endif'
			{
				newLeafNode(otherlv_6, grammarAccess.getConditionalTermAccess().getEndifKeyword_6());
			}
		)?
	)
;

// Entry rule entryRuleCaseTerm
entryRuleCaseTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseTermRule()); }
	iv_ruleCaseTerm=ruleCaseTerm
	{ $current=$iv_ruleCaseTerm.current; }
	EOF;

// Rule CaseTerm
ruleCaseTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='case'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseTermAccess().getCaseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseTermAccess().getCaseTermTermParserRuleCall_1_0());
				}
				lv_caseTerm_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseTermRule());
					}
					set(
						$current,
						"caseTerm",
						lv_caseTerm_1_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getCaseTermAccess().getOfKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseTermAccess().getTermTermParserRuleCall_3_0_0());
					}
					lv_term_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseTermRule());
						}
						add(
							$current,
							"term",
							lv_term_3_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getCaseTermAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseTermAccess().getTermActionTermParserRuleCall_3_2_0());
					}
					lv_termAction_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseTermRule());
						}
						add(
							$current,
							"termAction",
							lv_termAction_5_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		(
			otherlv_6='otherwise'
			{
				newLeafNode(otherlv_6, grammarAccess.getCaseTermAccess().getOtherwiseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_4_1_0());
					}
					lv_otherwiseTerm_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseTermRule());
						}
						set(
							$current,
							"otherwiseTerm",
							lv_otherwiseTerm_7_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='endcase'
		{
			newLeafNode(otherlv_8, grammarAccess.getCaseTermAccess().getEndcaseKeyword_5());
		}
	)
;

// Entry rule entryRuleLetTerm
entryRuleLetTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetTermRule()); }
	iv_ruleLetTerm=ruleLetTerm
	{ $current=$iv_ruleLetTerm.current; }
	EOF;

// Rule LetTerm
ruleLetTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLetTermAccess().getLetTermAction_0(),
					$current);
			}
		)
		otherlv_1='let'
		{
			newLeafNode(otherlv_1, grammarAccess.getLetTermAccess().getLetKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetTermAccess().getVarTermVariableTermParserRuleCall_2_0());
				}
				lv_varTerm_2_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_2_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getLetTermAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetTermAccess().getTermTermParserRuleCall_4_0());
				}
				lv_term_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetTermRule());
					}
					add(
						$current,
						"term",
						lv_term_4_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLetTermAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetTermAccess().getVarTermVariableTermParserRuleCall_5_1_0());
					}
					lv_varTerm_6_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_6_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetTermAccess().getTermTermParserRuleCall_5_3_0());
					}
					lv_term_8_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetTermRule());
						}
						add(
							$current,
							"term",
							lv_term_8_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='in'
		{
			newLeafNode(otherlv_9, grammarAccess.getLetTermAccess().getInKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_7_0());
				}
				lv_body_10_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetTermRule());
					}
					set(
						$current,
						"body",
						lv_body_10_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRuleAsTerm
entryRuleRuleAsTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleAsTermRule()); }
	iv_ruleRuleAsTerm=ruleRuleAsTerm
	{ $current=$iv_ruleRuleAsTerm.current; }
	EOF;

// Rule RuleAsTerm
ruleRuleAsTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRuleAsTermAccess().getRuleAsTermAction_0(),
					$current);
			}
		)
		otherlv_1='@'
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleAsTermAccess().getCommercialAtKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAsTermAccess().getRuleIdRuleParserRuleCall_2_0());
				}
				lv_rule_2_0=ruleIdRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
					}
					set(
						$current,
						"rule",
						lv_rule_2_0,
						"org.uasm.term.lang.TermDsl.IdRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReturnTerm
entryRuleReturnTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnTermRule()); }
	iv_ruleReturnTerm=ruleReturnTerm
	{ $current=$iv_ruleReturnTerm.current; }
	EOF;

// Rule ReturnTerm
ruleReturnTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnTermAccess().getReturnTermAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnTermAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnTermAccess().getTermTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnTermRule());
					}
					set(
						$current,
						"term",
						lv_term_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='in'
		{
			newLeafNode(otherlv_3, grammarAccess.getReturnTermAccess().getInKeyword_3());
		}
	)
;

// Entry rule entryRuleComprehensionTerm
entryRuleComprehensionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComprehensionTermRule()); }
	iv_ruleComprehensionTerm=ruleComprehensionTerm
	{ $current=$iv_ruleComprehensionTerm.current; }
	EOF;

// Rule ComprehensionTerm
ruleComprehensionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSetComprehensionTermParserRuleCall_0());
		}
		this_SetComprehensionTerm_0=ruleSetComprehensionTerm
		{
			$current = $this_SetComprehensionTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getListComprehensionTermParserRuleCall_1());
		}
		this_ListComprehensionTerm_1=ruleListComprehensionTerm
		{
			$current = $this_ListComprehensionTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getMapComprehensionTermParserRuleCall_2());
		}
		this_MapComprehensionTerm_2=ruleMapComprehensionTerm
		{
			$current = $this_MapComprehensionTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getBagComprehensionTermParserRuleCall_3());
		}
		this_BagComprehensionTerm_3=ruleBagComprehensionTerm
		{
			$current = $this_BagComprehensionTerm_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getNumberRangeTermParserRuleCall_4());
		}
		this_NumberRangeTerm_4=ruleNumberRangeTerm
		{
			$current = $this_NumberRangeTerm_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetComprehensionTerm
entryRuleSetComprehensionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetComprehensionTermRule()); }
	iv_ruleSetComprehensionTerm=ruleSetComprehensionTerm
	{ $current=$iv_ruleSetComprehensionTerm.current; }
	EOF;

// Rule SetComprehensionTerm
ruleSetComprehensionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetComprehensionTermAccess().getSetComprehensionTermAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetComprehensionTermAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetComprehensionTermAccess().getTermTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetComprehensionTermRule());
					}
					set(
						$current,
						"term",
						lv_term_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='|'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetComprehensionTermAccess().getVerticalLineKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0());
				}
				lv_varTerm_4_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetComprehensionTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_4_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='in'
		{
			newLeafNode(otherlv_5, grammarAccess.getSetComprehensionTermAccess().getInKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0());
				}
				lv_enumTerm_6_0=ruleEnumerableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetComprehensionTermRule());
					}
					add(
						$current,
						"enumTerm",
						lv_enumTerm_6_0,
						"org.uasm.term.lang.TermDsl.EnumerableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getSetComprehensionTermAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0());
					}
					lv_varTerm_8_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetComprehensionTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_8_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getSetComprehensionTermAccess().getInKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0());
					}
					lv_enumTerm_10_0=ruleEnumerableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetComprehensionTermRule());
						}
						add(
							$current,
							"enumTerm",
							lv_enumTerm_10_0,
							"org.uasm.term.lang.TermDsl.EnumerableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_11='with'
			{
				newLeafNode(otherlv_11, grammarAccess.getSetComprehensionTermAccess().getWithKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0());
					}
					lv_termWith_12_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetComprehensionTermRule());
						}
						set(
							$current,
							"termWith",
							lv_termWith_12_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getSetComprehensionTermAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleListComprehensionTerm
entryRuleListComprehensionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListComprehensionTermRule()); }
	iv_ruleListComprehensionTerm=ruleListComprehensionTerm
	{ $current=$iv_ruleListComprehensionTerm.current; }
	EOF;

// Rule ListComprehensionTerm
ruleListComprehensionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getListComprehensionTermAccess().getListComprehensionTermAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getListComprehensionTermAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListComprehensionTermAccess().getTermTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListComprehensionTermRule());
					}
					set(
						$current,
						"term",
						lv_term_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='|'
		{
			newLeafNode(otherlv_3, grammarAccess.getListComprehensionTermAccess().getVerticalLineKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0());
				}
				lv_varTerm_4_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListComprehensionTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_4_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='in'
		{
			newLeafNode(otherlv_5, grammarAccess.getListComprehensionTermAccess().getInKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0());
				}
				lv_enumTerm_6_0=ruleEnumerableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListComprehensionTermRule());
					}
					add(
						$current,
						"enumTerm",
						lv_enumTerm_6_0,
						"org.uasm.term.lang.TermDsl.EnumerableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getListComprehensionTermAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0());
					}
					lv_varTerm_8_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListComprehensionTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_8_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getListComprehensionTermAccess().getInKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0());
					}
					lv_enumTerm_10_0=ruleEnumerableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListComprehensionTermRule());
						}
						add(
							$current,
							"enumTerm",
							lv_enumTerm_10_0,
							"org.uasm.term.lang.TermDsl.EnumerableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_11='with'
			{
				newLeafNode(otherlv_11, grammarAccess.getListComprehensionTermAccess().getWithKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0());
					}
					lv_termWith_12_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListComprehensionTermRule());
						}
						set(
							$current,
							"termWith",
							lv_termWith_12_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13=']'
		{
			newLeafNode(otherlv_13, grammarAccess.getListComprehensionTermAccess().getRightSquareBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleBagComprehensionTerm
entryRuleBagComprehensionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagComprehensionTermRule()); }
	iv_ruleBagComprehensionTerm=ruleBagComprehensionTerm
	{ $current=$iv_ruleBagComprehensionTerm.current; }
	EOF;

// Rule BagComprehensionTerm
ruleBagComprehensionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBagComprehensionTermAccess().getBagComprehensionTermAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getBagComprehensionTermAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagComprehensionTermAccess().getTermTermParserRuleCall_2_0());
				}
				lv_term_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagComprehensionTermRule());
					}
					set(
						$current,
						"term",
						lv_term_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='|'
		{
			newLeafNode(otherlv_3, grammarAccess.getBagComprehensionTermAccess().getVerticalLineKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0());
				}
				lv_varTerm_4_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagComprehensionTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_4_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='in'
		{
			newLeafNode(otherlv_5, grammarAccess.getBagComprehensionTermAccess().getInKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0());
				}
				lv_enumTerm_6_0=ruleEnumerableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagComprehensionTermRule());
					}
					add(
						$current,
						"enumTerm",
						lv_enumTerm_6_0,
						"org.uasm.term.lang.TermDsl.EnumerableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getBagComprehensionTermAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0());
					}
					lv_varTerm_8_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagComprehensionTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_8_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getBagComprehensionTermAccess().getInKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0());
					}
					lv_enumTerm_10_0=ruleEnumerableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagComprehensionTermRule());
						}
						add(
							$current,
							"enumTerm",
							lv_enumTerm_10_0,
							"org.uasm.term.lang.TermDsl.EnumerableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_11='with'
			{
				newLeafNode(otherlv_11, grammarAccess.getBagComprehensionTermAccess().getWithKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0());
					}
					lv_termWith_12_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagComprehensionTermRule());
						}
						set(
							$current,
							"termWith",
							lv_termWith_12_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='>'
		{
			newLeafNode(otherlv_13, grammarAccess.getBagComprehensionTermAccess().getGreaterThanSignKeyword_9());
		}
	)
;

// Entry rule entryRuleMapComprehensionTerm
entryRuleMapComprehensionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapComprehensionTermRule()); }
	iv_ruleMapComprehensionTerm=ruleMapComprehensionTerm
	{ $current=$iv_ruleMapComprehensionTerm.current; }
	EOF;

// Rule MapComprehensionTerm
ruleMapComprehensionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapComprehensionTermAccess().getMapComprehensionTermAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapComprehensionTermAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getTerm1TermParserRuleCall_2_0());
				}
				lv_term1_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
					}
					set(
						$current,
						"term1",
						lv_term1_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getMapComprehensionTermAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getTerm2TermParserRuleCall_4_0());
				}
				lv_term2_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
					}
					set(
						$current,
						"term2",
						lv_term2_4_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='|'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapComprehensionTermAccess().getVerticalLineKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getVarTermVariableTermParserRuleCall_6_0());
				}
				lv_varTerm_6_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
					}
					add(
						$current,
						"varTerm",
						lv_varTerm_6_0,
						"org.uasm.term.lang.TermDsl.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='in'
		{
			newLeafNode(otherlv_7, grammarAccess.getMapComprehensionTermAccess().getInKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_8_0());
				}
				lv_enumTerm_8_0=ruleEnumerableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
					}
					add(
						$current,
						"enumTerm",
						lv_enumTerm_8_0,
						"org.uasm.term.lang.TermDsl.EnumerableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getMapComprehensionTermAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getVarTermVariableTermParserRuleCall_9_1_0());
					}
					lv_varTerm_10_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
						}
						add(
							$current,
							"varTerm",
							lv_varTerm_10_0,
							"org.uasm.term.lang.TermDsl.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='in'
			{
				newLeafNode(otherlv_11, grammarAccess.getMapComprehensionTermAccess().getInKeyword_9_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_9_3_0());
					}
					lv_enumTerm_12_0=ruleEnumerableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
						}
						add(
							$current,
							"enumTerm",
							lv_enumTerm_12_0,
							"org.uasm.term.lang.TermDsl.EnumerableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_13='with'
			{
				newLeafNode(otherlv_13, grammarAccess.getMapComprehensionTermAccess().getWithKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapComprehensionTermAccess().getTermWithTermParserRuleCall_10_1_0());
					}
					lv_termWith_14_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapComprehensionTermRule());
						}
						set(
							$current,
							"termWith",
							lv_termWith_14_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getMapComprehensionTermAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleNumberRangeTerm
entryRuleNumberRangeTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRangeTermRule()); }
	iv_ruleNumberRangeTerm=ruleNumberRangeTerm
	{ $current=$iv_ruleNumberRangeTerm.current; }
	EOF;

// Rule NumberRangeTerm
ruleNumberRangeTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberRangeTermAccess().getNumberRangeTermAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberRangeTermAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberRangeTermAccess().getStartTermParserRuleCall_2_0());
				}
				lv_start_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberRangeTermRule());
					}
					set(
						$current,
						"start",
						lv_start_2_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='..'
		{
			newLeafNode(otherlv_3, grammarAccess.getNumberRangeTermAccess().getFullStopFullStopKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberRangeTermAccess().getEndTermParserRuleCall_4_0());
				}
				lv_end_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberRangeTermRule());
					}
					set(
						$current,
						"end",
						lv_end_4_0,
						"org.uasm.term.lang.TermDsl.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='step'
			{
				newLeafNode(otherlv_5, grammarAccess.getNumberRangeTermAccess().getStepKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNumberRangeTermAccess().getStepTermParserRuleCall_5_1_0());
					}
					lv_step_6_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumberRangeTermRule());
						}
						set(
							$current,
							"step",
							lv_step_6_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getNumberRangeTermAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleStructureTerm
entryRuleStructureTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructureTermRule()); }
	iv_ruleStructureTerm=ruleStructureTerm
	{ $current=$iv_ruleStructureTerm.current; }
	EOF;

// Rule StructureTerm
ruleStructureTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructureTermAccess().getSetTermParserRuleCall_0());
		}
		this_SetTerm_0=ruleSetTerm
		{
			$current = $this_SetTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructureTermAccess().getListTermParserRuleCall_1());
		}
		this_ListTerm_1=ruleListTerm
		{
			$current = $this_ListTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructureTermAccess().getBagTermParserRuleCall_2());
		}
		this_BagTerm_2=ruleBagTerm
		{
			$current = $this_BagTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructureTermAccess().getMapTermParserRuleCall_3());
		}
		this_MapTerm_3=ruleMapTerm
		{
			$current = $this_MapTerm_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetTerm
entryRuleSetTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetTermRule()); }
	iv_ruleSetTerm=ruleSetTerm
	{ $current=$iv_ruleSetTerm.current; }
	EOF;

// Rule SetTerm
ruleSetTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSetTermAccess().getSetTermAction_0_0(),
						$current);
				}
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetTermAccess().getTermTermParserRuleCall_0_2_0());
					}
					lv_term_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetTermRule());
						}
						add(
							$current,
							"term",
							lv_term_2_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getSetTermAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSetTermAccess().getTermTermParserRuleCall_0_3_1_0());
						}
						lv_term_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSetTermRule());
							}
							add(
								$current,
								"term",
								lv_term_4_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleListTerm
entryRuleListTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTermRule()); }
	iv_ruleListTerm=ruleListTerm
	{ $current=$iv_ruleListTerm.current; }
	EOF;

// Rule ListTerm
ruleListTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getListTermAccess().getListTermAction_0_0(),
						$current);
				}
			)
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getListTermAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListTermAccess().getTermTermParserRuleCall_0_2_0());
					}
					lv_term_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListTermRule());
						}
						add(
							$current,
							"term",
							lv_term_2_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getListTermAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListTermAccess().getTermTermParserRuleCall_0_3_1_0());
						}
						lv_term_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListTermRule());
							}
							add(
								$current,
								"term",
								lv_term_4_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getListTermAccess().getRightSquareBracketKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getListTermAccess().getLeftSquareBracketKeyword_1_0());
			}
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getListTermAccess().getRightSquareBracketKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleBagTerm
entryRuleBagTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagTermRule()); }
	iv_ruleBagTerm=ruleBagTerm
	{ $current=$iv_ruleBagTerm.current; }
	EOF;

// Rule BagTerm
ruleBagTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBagTermAccess().getBagTermAction_0_0(),
						$current);
				}
			)
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getBagTermAccess().getLessThanSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagTermAccess().getTermTermParserRuleCall_0_2_0());
					}
					lv_term_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagTermRule());
						}
						add(
							$current,
							"term",
							lv_term_2_0,
							"org.uasm.term.lang.TermDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getBagTermAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBagTermAccess().getTermTermParserRuleCall_0_3_1_0());
						}
						lv_term_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBagTermRule());
							}
							add(
								$current,
								"term",
								lv_term_4_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_0_4());
			}
		)
		    |
		(
			otherlv_6='<'
			{
				newLeafNode(otherlv_6, grammarAccess.getBagTermAccess().getLessThanSignKeyword_1_0());
			}
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleMapTerm
entryRuleMapTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTermRule()); }
	iv_ruleMapTerm=ruleMapTerm
	{ $current=$iv_ruleMapTerm.current; }
	EOF;

// Rule MapTerm
ruleMapTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getMapTermAccess().getMapTermAction_0_0(),
						$current);
				}
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_2_0_0());
						}
						lv_term_2_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapTermRule());
							}
							add(
								$current,
								"term",
								lv_term_2_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='->'
				{
					newLeafNode(otherlv_3, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_0_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_2_2_0());
						}
						lv_term_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapTermRule());
							}
							add(
								$current,
								"term",
								lv_term_4_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMapTermAccess().getCommaKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_3_1_0());
						}
						lv_term_6_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapTermRule());
							}
							add(
								$current,
								"term",
								lv_term_6_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='->'
				{
					newLeafNode(otherlv_7, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_0_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_3_3_0());
						}
						lv_term_8_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapTermRule());
							}
							add(
								$current,
								"term",
								lv_term_8_0,
								"org.uasm.term.lang.TermDsl.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_0_4());
			}
		)
		    |
		(
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_11='->'
			{
				newLeafNode(otherlv_11, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleIdDomain
entryRuleIdDomain returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdDomainRule()); }
	iv_ruleIdDomain=ruleIdDomain
	{ $current=$iv_ruleIdDomain.current.getText(); }
	EOF;

// Rule IdDomain
ruleIdDomain returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getIdDomainAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleIdFunction
entryRuleIdFunction returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdFunctionRule()); }
	iv_ruleIdFunction=ruleIdFunction
	{ $current=$iv_ruleIdFunction.current.getText(); }
	EOF;

// Rule IdFunction
ruleIdFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getIdFunctionAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleIdRule
entryRuleIdRule returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdRuleRule()); }
	iv_ruleIdRule=ruleIdRule
	{ $current=$iv_ruleIdRule.current.getText(); }
	EOF;

// Rule IdRule
ruleIdRule returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getIdRuleAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_text_1_0=RULE_STN
				{
					newLeafNode(lv_text_1_0, grammarAccess.getStringLiteralAccess().getTextSTNTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.uasm.term.lang.TermDsl.STN");
				}
			)
		)
	)
;

// Entry rule entryRuleCharLiteral
entryRuleCharLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharLiteralRule()); }
	iv_ruleCharLiteral=ruleCharLiteral
	{ $current=$iv_ruleCharLiteral.current; }
	EOF;

// Rule CharLiteral
ruleCharLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCharLiteralAccess().getCharLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_text_1_0=RULE_STN
				{
					newLeafNode(lv_text_1_0, grammarAccess.getCharLiteralAccess().getTextSTNTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.uasm.term.lang.TermDsl.STN");
				}
			)
		)
	)
;

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDomainAccess().getStructuredDomainParserRuleCall_0());
		}
		this_StructuredDomain_0=ruleStructuredDomain
		{
			$current = $this_StructuredDomain_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDomainAccess().getBasicDomainParserRuleCall_1());
		}
		this_BasicDomain_1=ruleBasicDomain
		{
			$current = $this_BasicDomain_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDomainAccess().getExtendableDomainParserRuleCall_2());
		}
		this_ExtendableDomain_2=ruleExtendableDomain
		{
			$current = $this_ExtendableDomain_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStructuredDomain
entryRuleStructuredDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructuredDomainRule()); }
	iv_ruleStructuredDomain=ruleStructuredDomain
	{ $current=$iv_ruleStructuredDomain.current; }
	EOF;

// Rule StructuredDomain
ruleStructuredDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getStructuredDomainAccess().getStructuredDomainAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_type_1_0='SET'
					{
						newLeafNode(lv_type_1_0, grammarAccess.getStructuredDomainAccess().getTypeSETKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStructuredDomainRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_0, "SET");
					}
				)
			)
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructuredDomainAccess().getDomainSetDomainParserRuleCall_0_2_1_0());
						}
						lv_domainSet_3_0=ruleDomain
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructuredDomainRule());
							}
							set(
								$current,
								"domainSet",
								lv_domainSet_3_0,
								"org.uasm.term.lang.TermDsl.Domain");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_0_2_2());
				}
			)?
		)
		    |
		(
			(
				(
					lv_type_5_0='BAG'
					{
						newLeafNode(lv_type_5_0, grammarAccess.getStructuredDomainAccess().getTypeBAGKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStructuredDomainRule());
						}
						setWithLastConsumed($current, "type", lv_type_5_0, "BAG");
					}
				)
			)
			(
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructuredDomainAccess().getDomainBagDomainParserRuleCall_1_1_1_0());
						}
						lv_domainBag_7_0=ruleDomain
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructuredDomainRule());
							}
							set(
								$current,
								"domainBag",
								lv_domainBag_7_0,
								"org.uasm.term.lang.TermDsl.Domain");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_1_1_2());
				}
			)?
		)
		    |
		(
			(
				(
					lv_type_9_0='LIST'
					{
						newLeafNode(lv_type_9_0, grammarAccess.getStructuredDomainAccess().getTypeLISTKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStructuredDomainRule());
						}
						setWithLastConsumed($current, "type", lv_type_9_0, "LIST");
					}
				)
			)
			(
				otherlv_10='('
				{
					newLeafNode(otherlv_10, grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructuredDomainAccess().getDomainListDomainParserRuleCall_2_1_1_0());
						}
						lv_domainList_11_0=ruleDomain
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructuredDomainRule());
							}
							set(
								$current,
								"domainList",
								lv_domainList_11_0,
								"org.uasm.term.lang.TermDsl.Domain");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=')'
				{
					newLeafNode(otherlv_12, grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_2_1_2());
				}
			)?
		)
		    |
		(
			(
				(
					lv_type_13_0='MAP'
					{
						newLeafNode(lv_type_13_0, grammarAccess.getStructuredDomainAccess().getTypeMAPKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStructuredDomainRule());
						}
						setWithLastConsumed($current, "type", lv_type_13_0, "MAP");
					}
				)
			)
			(
				otherlv_14='('
				{
					newLeafNode(otherlv_14, grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructuredDomainAccess().getDomainMapDomainParserRuleCall_3_1_1_0());
						}
						lv_domainMap_15_0=ruleDomain
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructuredDomainRule());
							}
							add(
								$current,
								"domainMap",
								lv_domainMap_15_0,
								"org.uasm.term.lang.TermDsl.Domain");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getStructuredDomainAccess().getCommaKeyword_3_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStructuredDomainAccess().getDomainMapDomainParserRuleCall_3_1_3_0());
						}
						lv_domainMap_17_0=ruleDomain
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructuredDomainRule());
							}
							add(
								$current,
								"domainMap",
								lv_domainMap_17_0,
								"org.uasm.term.lang.TermDsl.Domain");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_18=')'
				{
					newLeafNode(otherlv_18, grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_3_1_4());
				}
			)?
		)
	)
;

// Entry rule entryRuleExtendableDomain
entryRuleExtendableDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendableDomainRule()); }
	iv_ruleExtendableDomain=ruleExtendableDomain
	{ $current=$iv_ruleExtendableDomain.current; }
	EOF;

// Rule ExtendableDomain
ruleExtendableDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExtendableDomainAccess().getExtendableDomainAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_type_1_0='ANY'
					{
						newLeafNode(lv_type_1_0, grammarAccess.getExtendableDomainAccess().getTypeANYKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtendableDomainRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_0, "ANY");
					}
				)
			)
		)
		    |
		(
			(
				lv_type_2_0='AGENT'
				{
					newLeafNode(lv_type_2_0, grammarAccess.getExtendableDomainAccess().getTypeAGENTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtendableDomainRule());
					}
					setWithLastConsumed($current, "type", lv_type_2_0, "AGENT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendableDomainAccess().getTypeIdDomainParserRuleCall_2_0());
				}
				lv_type_3_0=ruleIdDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendableDomainRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.uasm.term.lang.TermDsl.IdDomain");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBasicDomain
entryRuleBasicDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicDomainRule()); }
	iv_ruleBasicDomain=ruleBasicDomain
	{ $current=$iv_ruleBasicDomain.current; }
	EOF;

// Rule BasicDomain
ruleBasicDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBasicDomainAccess().getBasicDomainAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicDomainAccess().getTypeBasicDomBasicDomainEnumEnumRuleCall_1_0());
				}
				lv_typeBasicDom_1_0=ruleBasicDomainEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicDomainRule());
					}
					set(
						$current,
						"typeBasicDom",
						lv_typeBasicDom_1_0,
						"org.uasm.term.lang.TermDsl.BasicDomainEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				lv_valueDec_2_0=RULE_TK_FLOAT
				{
					newLeafNode(lv_valueDec_2_0, grammarAccess.getNumberLiteralAccess().getValueDecTK_FLOATTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"valueDec",
						lv_valueDec_2_0,
						"org.uasm.term.lang.TermDsl.TK_FLOAT");
				}
			)
		)
	)
;

// Entry rule entryRuleTupleLiteral
entryRuleTupleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleLiteralRule()); }
	iv_ruleTupleLiteral=ruleTupleLiteral
	{ $current=$iv_ruleTupleLiteral.current; }
	EOF;

// Rule TupleLiteral
ruleTupleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTupleLiteralAccess().getTupleLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleLiteralAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralAccess().getLiteralsLiteralParserRuleCall_2_0());
				}
				lv_literals_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralRule());
					}
					add(
						$current,
						"literals",
						lv_literals_2_0,
						"org.uasm.term.lang.TermDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTupleLiteralAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleLiteralAccess().getLiteralsLiteralParserRuleCall_3_1_0());
					}
					lv_literals_4_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleLiteralRule());
						}
						add(
							$current,
							"literals",
							lv_literals_4_0,
							"org.uasm.term.lang.TermDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleLiteralAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Rule BasicDomainEnum
ruleBasicDomainEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STRING'
			{
				$current = grammarAccess.getBasicDomainEnumAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicDomainEnumAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NUMBER'
			{
				$current = grammarAccess.getBasicDomainEnumAccess().getNumberEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicDomainEnumAccess().getNumberEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='INTEGER'
			{
				$current = grammarAccess.getBasicDomainEnumAccess().getIntegerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicDomainEnumAccess().getIntegerEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='CHAR'
			{
				$current = grammarAccess.getBasicDomainEnumAccess().getCharEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBasicDomainEnumAccess().getCharEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='BOOLEAN'
			{
				$current = grammarAccess.getBasicDomainEnumAccess().getBooleanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBasicDomainEnumAccess().getBooleanEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='RULE'
			{
				$current = grammarAccess.getBasicDomainEnumAccess().getRuleEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBasicDomainEnumAccess().getRuleEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_STN : RULE_STRING;

RULE_TK_FLOAT : ('0'..'9')+ '.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

fragment RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
