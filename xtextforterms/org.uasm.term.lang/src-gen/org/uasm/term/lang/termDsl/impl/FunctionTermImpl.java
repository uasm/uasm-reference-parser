/**
 * generated by Xtext 2.10.0
 */
package org.uasm.term.lang.termDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.uasm.term.lang.termDsl.Expression;
import org.uasm.term.lang.termDsl.FunctionTerm;
import org.uasm.term.lang.termDsl.TermDslPackage;
import org.uasm.term.lang.termDsl.TupleTerm;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Term</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.uasm.term.lang.termDsl.impl.FunctionTermImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link org.uasm.term.lang.termDsl.impl.FunctionTermImpl#getArgs <em>Args</em>}</li>
 *   <li>{@link org.uasm.term.lang.termDsl.impl.FunctionTermImpl#getArgsTuple <em>Args Tuple</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionTermImpl extends MinimalEObjectImpl.Container implements FunctionTerm
{
  /**
   * The default value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected static final String FUNCTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected String function = FUNCTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getArgs() <em>Args</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected Expression args;

  /**
   * The cached value of the '{@link #getArgsTuple() <em>Args Tuple</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgsTuple()
   * @generated
   * @ordered
   */
  protected TupleTerm argsTuple;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionTermImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TermDslPackage.Literals.FUNCTION_TERM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunction(String newFunction)
  {
    String oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TermDslPackage.FUNCTION_TERM__FUNCTION, oldFunction, function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getArgs()
  {
    return args;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArgs(Expression newArgs, NotificationChain msgs)
  {
    Expression oldArgs = args;
    args = newArgs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TermDslPackage.FUNCTION_TERM__ARGS, oldArgs, newArgs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArgs(Expression newArgs)
  {
    if (newArgs != args)
    {
      NotificationChain msgs = null;
      if (args != null)
        msgs = ((InternalEObject)args).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TermDslPackage.FUNCTION_TERM__ARGS, null, msgs);
      if (newArgs != null)
        msgs = ((InternalEObject)newArgs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TermDslPackage.FUNCTION_TERM__ARGS, null, msgs);
      msgs = basicSetArgs(newArgs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TermDslPackage.FUNCTION_TERM__ARGS, newArgs, newArgs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TupleTerm getArgsTuple()
  {
    return argsTuple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArgsTuple(TupleTerm newArgsTuple, NotificationChain msgs)
  {
    TupleTerm oldArgsTuple = argsTuple;
    argsTuple = newArgsTuple;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TermDslPackage.FUNCTION_TERM__ARGS_TUPLE, oldArgsTuple, newArgsTuple);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArgsTuple(TupleTerm newArgsTuple)
  {
    if (newArgsTuple != argsTuple)
    {
      NotificationChain msgs = null;
      if (argsTuple != null)
        msgs = ((InternalEObject)argsTuple).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TermDslPackage.FUNCTION_TERM__ARGS_TUPLE, null, msgs);
      if (newArgsTuple != null)
        msgs = ((InternalEObject)newArgsTuple).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TermDslPackage.FUNCTION_TERM__ARGS_TUPLE, null, msgs);
      msgs = basicSetArgsTuple(newArgsTuple, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TermDslPackage.FUNCTION_TERM__ARGS_TUPLE, newArgsTuple, newArgsTuple));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TermDslPackage.FUNCTION_TERM__ARGS:
        return basicSetArgs(null, msgs);
      case TermDslPackage.FUNCTION_TERM__ARGS_TUPLE:
        return basicSetArgsTuple(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TermDslPackage.FUNCTION_TERM__FUNCTION:
        return getFunction();
      case TermDslPackage.FUNCTION_TERM__ARGS:
        return getArgs();
      case TermDslPackage.FUNCTION_TERM__ARGS_TUPLE:
        return getArgsTuple();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TermDslPackage.FUNCTION_TERM__FUNCTION:
        setFunction((String)newValue);
        return;
      case TermDslPackage.FUNCTION_TERM__ARGS:
        setArgs((Expression)newValue);
        return;
      case TermDslPackage.FUNCTION_TERM__ARGS_TUPLE:
        setArgsTuple((TupleTerm)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TermDslPackage.FUNCTION_TERM__FUNCTION:
        setFunction(FUNCTION_EDEFAULT);
        return;
      case TermDslPackage.FUNCTION_TERM__ARGS:
        setArgs((Expression)null);
        return;
      case TermDslPackage.FUNCTION_TERM__ARGS_TUPLE:
        setArgsTuple((TupleTerm)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TermDslPackage.FUNCTION_TERM__FUNCTION:
        return FUNCTION_EDEFAULT == null ? function != null : !FUNCTION_EDEFAULT.equals(function);
      case TermDslPackage.FUNCTION_TERM__ARGS:
        return args != null;
      case TermDslPackage.FUNCTION_TERM__ARGS_TUPLE:
        return argsTuple != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (function: ");
    result.append(function);
    result.append(')');
    return result.toString();
  }

} //FunctionTermImpl
