/*
 * generated by Xtext 2.10.0
 */
package org.uasm.term.lang.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.uasm.term.lang.ide.contentassist.antlr.internal.InternalTermDslParser;
import org.uasm.term.lang.services.TermDslGrammarAccess;

public class TermDslParser extends AbstractContentAssistParser {

	@Inject
	private TermDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalTermDslParser createParser() {
		InternalTermDslParser result = new InternalTermDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0(), "rule__EqualityExpression__OpAlternatives_1_1_0");
					put(grammarAccess.getRelationExpressionAccess().getOpAlternatives_1_1_0(), "rule__RelationExpression__OpAlternatives_1_1_0");
					put(grammarAccess.getAddExpressionAccess().getOpAlternatives_1_1_0(), "rule__AddExpression__OpAlternatives_1_1_0");
					put(grammarAccess.getMultExpressionAccess().getOpAlternatives_1_1_0(), "rule__MultExpression__OpAlternatives_1_1_0");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getBasicExpressionAccess().getAlternatives(), "rule__BasicExpression__Alternatives");
					put(grammarAccess.getBasicTermAccess().getAlternatives(), "rule__BasicTerm__Alternatives");
					put(grammarAccess.getFunctionTermAccess().getAlternatives_2(), "rule__FunctionTerm__Alternatives_2");
					put(grammarAccess.getEnumerableTermAccess().getAlternatives(), "rule__EnumerableTerm__Alternatives");
					put(grammarAccess.getLocationTermAccess().getAlternatives(), "rule__LocationTerm__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives(), "rule__BooleanLiteral__Alternatives");
					put(grammarAccess.getKernelLiteralAccess().getAlternatives(), "rule__KernelLiteral__Alternatives");
					put(grammarAccess.getSetLiteralAccess().getAlternatives(), "rule__SetLiteral__Alternatives");
					put(grammarAccess.getListLiteralAccess().getAlternatives(), "rule__ListLiteral__Alternatives");
					put(grammarAccess.getBagLiteralAccess().getAlternatives(), "rule__BagLiteral__Alternatives");
					put(grammarAccess.getMapLiteralAccess().getAlternatives(), "rule__MapLiteral__Alternatives");
					put(grammarAccess.getComprehensionTermAccess().getAlternatives(), "rule__ComprehensionTerm__Alternatives");
					put(grammarAccess.getStructureTermAccess().getAlternatives(), "rule__StructureTerm__Alternatives");
					put(grammarAccess.getSetTermAccess().getAlternatives(), "rule__SetTerm__Alternatives");
					put(grammarAccess.getListTermAccess().getAlternatives(), "rule__ListTerm__Alternatives");
					put(grammarAccess.getBagTermAccess().getAlternatives(), "rule__BagTerm__Alternatives");
					put(grammarAccess.getMapTermAccess().getAlternatives(), "rule__MapTerm__Alternatives");
					put(grammarAccess.getDomainAccess().getAlternatives(), "rule__Domain__Alternatives");
					put(grammarAccess.getStructuredDomainAccess().getAlternatives(), "rule__StructuredDomain__Alternatives");
					put(grammarAccess.getExtendableDomainAccess().getAlternatives(), "rule__ExtendableDomain__Alternatives");
					put(grammarAccess.getNumberLiteralAccess().getAlternatives(), "rule__NumberLiteral__Alternatives");
					put(grammarAccess.getBasicDomainEnumAccess().getAlternatives(), "rule__BasicDomainEnum__Alternatives");
					put(grammarAccess.getCondTernaryExpressionAccess().getGroup(), "rule__CondTernaryExpression__Group__0");
					put(grammarAccess.getCondTernaryExpressionAccess().getGroup_1(), "rule__CondTernaryExpression__Group_1__0");
					put(grammarAccess.getImpliesExpressionAccess().getGroup(), "rule__ImpliesExpression__Group__0");
					put(grammarAccess.getImpliesExpressionAccess().getGroup_1(), "rule__ImpliesExpression__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getXorExpressionAccess().getGroup(), "rule__XorExpression__Group__0");
					put(grammarAccess.getXorExpressionAccess().getGroup_1(), "rule__XorExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getRelationExpressionAccess().getGroup(), "rule__RelationExpression__Group__0");
					put(grammarAccess.getRelationExpressionAccess().getGroup_1(), "rule__RelationExpression__Group_1__0");
					put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
					put(grammarAccess.getPowerExpressionAccess().getGroup(), "rule__PowerExpression__Group__0");
					put(grammarAccess.getPowerExpressionAccess().getGroup_1(), "rule__PowerExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_0(), "rule__UnaryExpression__Group_0__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getBasicExpressionAccess().getGroup_1(), "rule__BasicExpression__Group_1__0");
					put(grammarAccess.getBasicTermAccess().getGroup_0(), "rule__BasicTerm__Group_0__0");
					put(grammarAccess.getTupleTermAccess().getGroup(), "rule__TupleTerm__Group__0");
					put(grammarAccess.getTupleTermAccess().getGroup_3(), "rule__TupleTerm__Group_3__0");
					put(grammarAccess.getFunctionTermAccess().getGroup(), "rule__FunctionTerm__Group__0");
					put(grammarAccess.getFunctionTermAccess().getGroup_2_0(), "rule__FunctionTerm__Group_2_0__0");
					put(grammarAccess.getLocationTermAccess().getGroup_0(), "rule__LocationTerm__Group_0__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup_0(), "rule__BooleanLiteral__Group_0__0");
					put(grammarAccess.getKernelLiteralAccess().getGroup_0(), "rule__KernelLiteral__Group_0__0");
					put(grammarAccess.getIntervalLiteralAccess().getGroup(), "rule__IntervalLiteral__Group__0");
					put(grammarAccess.getIntervalLiteralAccess().getGroup_5(), "rule__IntervalLiteral__Group_5__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_0(), "rule__SetLiteral__Group_0__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_0_3(), "rule__SetLiteral__Group_0_3__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_1(), "rule__SetLiteral__Group_1__0");
					put(grammarAccess.getListLiteralAccess().getGroup_0(), "rule__ListLiteral__Group_0__0");
					put(grammarAccess.getListLiteralAccess().getGroup_0_3(), "rule__ListLiteral__Group_0_3__0");
					put(grammarAccess.getListLiteralAccess().getGroup_1(), "rule__ListLiteral__Group_1__0");
					put(grammarAccess.getBagLiteralAccess().getGroup_0(), "rule__BagLiteral__Group_0__0");
					put(grammarAccess.getBagLiteralAccess().getGroup_0_3(), "rule__BagLiteral__Group_0_3__0");
					put(grammarAccess.getBagLiteralAccess().getGroup_1(), "rule__BagLiteral__Group_1__0");
					put(grammarAccess.getMapLiteralAccess().getGroup_0(), "rule__MapLiteral__Group_0__0");
					put(grammarAccess.getMapLiteralAccess().getGroup_0_2(), "rule__MapLiteral__Group_0_2__0");
					put(grammarAccess.getMapLiteralAccess().getGroup_0_3(), "rule__MapLiteral__Group_0_3__0");
					put(grammarAccess.getMapLiteralAccess().getGroup_1(), "rule__MapLiteral__Group_1__0");
					put(grammarAccess.getForAllTermAccess().getGroup(), "rule__ForAllTerm__Group__0");
					put(grammarAccess.getForAllTermAccess().getGroup_5(), "rule__ForAllTerm__Group_5__0");
					put(grammarAccess.getExistsTermAccess().getGroup(), "rule__ExistsTerm__Group__0");
					put(grammarAccess.getExistsTermAccess().getGroup_6(), "rule__ExistsTerm__Group_6__0");
					put(grammarAccess.getSizeOfEnumerableTermAccess().getGroup(), "rule__SizeOfEnumerableTerm__Group__0");
					put(grammarAccess.getPickTermAccess().getGroup(), "rule__PickTerm__Group__0");
					put(grammarAccess.getPickTermAccess().getGroup_4(), "rule__PickTerm__Group_4__0");
					put(grammarAccess.getConditionalTermAccess().getGroup(), "rule__ConditionalTerm__Group__0");
					put(grammarAccess.getCaseTermAccess().getGroup(), "rule__CaseTerm__Group__0");
					put(grammarAccess.getCaseTermAccess().getGroup_3(), "rule__CaseTerm__Group_3__0");
					put(grammarAccess.getCaseTermAccess().getGroup_4(), "rule__CaseTerm__Group_4__0");
					put(grammarAccess.getLetTermAccess().getGroup(), "rule__LetTerm__Group__0");
					put(grammarAccess.getLetTermAccess().getGroup_5(), "rule__LetTerm__Group_5__0");
					put(grammarAccess.getRuleAsTermAccess().getGroup(), "rule__RuleAsTerm__Group__0");
					put(grammarAccess.getReturnTermAccess().getGroup(), "rule__ReturnTerm__Group__0");
					put(grammarAccess.getSetComprehensionTermAccess().getGroup(), "rule__SetComprehensionTerm__Group__0");
					put(grammarAccess.getSetComprehensionTermAccess().getGroup_7(), "rule__SetComprehensionTerm__Group_7__0");
					put(grammarAccess.getSetComprehensionTermAccess().getGroup_8(), "rule__SetComprehensionTerm__Group_8__0");
					put(grammarAccess.getListComprehensionTermAccess().getGroup(), "rule__ListComprehensionTerm__Group__0");
					put(grammarAccess.getListComprehensionTermAccess().getGroup_7(), "rule__ListComprehensionTerm__Group_7__0");
					put(grammarAccess.getListComprehensionTermAccess().getGroup_8(), "rule__ListComprehensionTerm__Group_8__0");
					put(grammarAccess.getBagComprehensionTermAccess().getGroup(), "rule__BagComprehensionTerm__Group__0");
					put(grammarAccess.getBagComprehensionTermAccess().getGroup_7(), "rule__BagComprehensionTerm__Group_7__0");
					put(grammarAccess.getBagComprehensionTermAccess().getGroup_8(), "rule__BagComprehensionTerm__Group_8__0");
					put(grammarAccess.getMapComprehensionTermAccess().getGroup(), "rule__MapComprehensionTerm__Group__0");
					put(grammarAccess.getMapComprehensionTermAccess().getGroup_9(), "rule__MapComprehensionTerm__Group_9__0");
					put(grammarAccess.getMapComprehensionTermAccess().getGroup_10(), "rule__MapComprehensionTerm__Group_10__0");
					put(grammarAccess.getNumberRangeTermAccess().getGroup(), "rule__NumberRangeTerm__Group__0");
					put(grammarAccess.getNumberRangeTermAccess().getGroup_5(), "rule__NumberRangeTerm__Group_5__0");
					put(grammarAccess.getSetTermAccess().getGroup_0(), "rule__SetTerm__Group_0__0");
					put(grammarAccess.getSetTermAccess().getGroup_0_3(), "rule__SetTerm__Group_0_3__0");
					put(grammarAccess.getSetTermAccess().getGroup_1(), "rule__SetTerm__Group_1__0");
					put(grammarAccess.getListTermAccess().getGroup_0(), "rule__ListTerm__Group_0__0");
					put(grammarAccess.getListTermAccess().getGroup_0_3(), "rule__ListTerm__Group_0_3__0");
					put(grammarAccess.getListTermAccess().getGroup_1(), "rule__ListTerm__Group_1__0");
					put(grammarAccess.getBagTermAccess().getGroup_0(), "rule__BagTerm__Group_0__0");
					put(grammarAccess.getBagTermAccess().getGroup_0_3(), "rule__BagTerm__Group_0_3__0");
					put(grammarAccess.getBagTermAccess().getGroup_1(), "rule__BagTerm__Group_1__0");
					put(grammarAccess.getMapTermAccess().getGroup_0(), "rule__MapTerm__Group_0__0");
					put(grammarAccess.getMapTermAccess().getGroup_0_2(), "rule__MapTerm__Group_0_2__0");
					put(grammarAccess.getMapTermAccess().getGroup_0_3(), "rule__MapTerm__Group_0_3__0");
					put(grammarAccess.getMapTermAccess().getGroup_1(), "rule__MapTerm__Group_1__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getCharLiteralAccess().getGroup(), "rule__CharLiteral__Group__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_0(), "rule__StructuredDomain__Group_0__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_0_2(), "rule__StructuredDomain__Group_0_2__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_1(), "rule__StructuredDomain__Group_1__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_1_1(), "rule__StructuredDomain__Group_1_1__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_2(), "rule__StructuredDomain__Group_2__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_2_1(), "rule__StructuredDomain__Group_2_1__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_3(), "rule__StructuredDomain__Group_3__0");
					put(grammarAccess.getStructuredDomainAccess().getGroup_3_1(), "rule__StructuredDomain__Group_3_1__0");
					put(grammarAccess.getExtendableDomainAccess().getGroup_0(), "rule__ExtendableDomain__Group_0__0");
					put(grammarAccess.getBasicDomainAccess().getGroup(), "rule__BasicDomain__Group__0");
					put(grammarAccess.getNumberLiteralAccess().getGroup_0(), "rule__NumberLiteral__Group_0__0");
					put(grammarAccess.getTupleLiteralAccess().getGroup(), "rule__TupleLiteral__Group__0");
					put(grammarAccess.getTupleLiteralAccess().getGroup_3(), "rule__TupleLiteral__Group_3__0");
					put(grammarAccess.getCondTernaryExpressionAccess().getThenAssignment_1_2(), "rule__CondTernaryExpression__ThenAssignment_1_2");
					put(grammarAccess.getCondTernaryExpressionAccess().getElseAssignment_1_4(), "rule__CondTernaryExpression__ElseAssignment_1_4");
					put(grammarAccess.getImpliesExpressionAccess().getOpAssignment_1_1(), "rule__ImpliesExpression__OpAssignment_1_1");
					put(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2(), "rule__ImpliesExpression__RightAssignment_1_2");
					put(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1(), "rule__OrExpression__OpAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2(), "rule__OrExpression__RightAssignment_1_2");
					put(grammarAccess.getXorExpressionAccess().getOpAssignment_1_1(), "rule__XorExpression__OpAssignment_1_1");
					put(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2(), "rule__XorExpression__RightAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1(), "rule__AndExpression__OpAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2(), "rule__AndExpression__RightAssignment_1_2");
					put(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1(), "rule__EqualityExpression__OpAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2(), "rule__EqualityExpression__RightAssignment_1_2");
					put(grammarAccess.getRelationExpressionAccess().getOpAssignment_1_1(), "rule__RelationExpression__OpAssignment_1_1");
					put(grammarAccess.getRelationExpressionAccess().getRightAssignment_1_2(), "rule__RelationExpression__RightAssignment_1_2");
					put(grammarAccess.getAddExpressionAccess().getOpAssignment_1_1(), "rule__AddExpression__OpAssignment_1_1");
					put(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2(), "rule__AddExpression__RightAssignment_1_2");
					put(grammarAccess.getMultExpressionAccess().getOpAssignment_1_1(), "rule__MultExpression__OpAssignment_1_1");
					put(grammarAccess.getMultExpressionAccess().getRightAssignment_1_2(), "rule__MultExpression__RightAssignment_1_2");
					put(grammarAccess.getPowerExpressionAccess().getOpAssignment_1_1(), "rule__PowerExpression__OpAssignment_1_1");
					put(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2(), "rule__PowerExpression__RightAssignment_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_1(), "rule__UnaryExpression__OpAssignment_0_1");
					put(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2(), "rule__UnaryExpression__ExpressionAssignment_0_2");
					put(grammarAccess.getUnaryExpressionAccess().getOpAssignment_1_1(), "rule__UnaryExpression__OpAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_1_2(), "rule__UnaryExpression__ExpressionAssignment_1_2");
					put(grammarAccess.getBasicTermAccess().getIndexAssignment_0_1(), "rule__BasicTerm__IndexAssignment_0_1");
					put(grammarAccess.getBasicTermAccess().getTAssignment_0_2(), "rule__BasicTerm__TAssignment_0_2");
					put(grammarAccess.getTupleTermAccess().getTermAssignment_2(), "rule__TupleTerm__TermAssignment_2");
					put(grammarAccess.getTupleTermAccess().getTermAssignment_3_1(), "rule__TupleTerm__TermAssignment_3_1");
					put(grammarAccess.getFunctionTermAccess().getFunctionAssignment_1(), "rule__FunctionTerm__FunctionAssignment_1");
					put(grammarAccess.getFunctionTermAccess().getArgsAssignment_2_0_1(), "rule__FunctionTerm__ArgsAssignment_2_0_1");
					put(grammarAccess.getFunctionTermAccess().getArgsTupleAssignment_2_1(), "rule__FunctionTerm__ArgsTupleAssignment_2_1");
					put(grammarAccess.getEnumerableTermAccess().getDomAssignment_1(), "rule__EnumerableTerm__DomAssignment_1");
					put(grammarAccess.getLocationTermAccess().getFunctionAssignment_0_1(), "rule__LocationTerm__FunctionAssignment_0_1");
					put(grammarAccess.getLocationTermAccess().getResultAssignment_1(), "rule__LocationTerm__ResultAssignment_1");
					put(grammarAccess.getBooleanLiteralAccess().getValAssignment_0_1(), "rule__BooleanLiteral__ValAssignment_0_1");
					put(grammarAccess.getBooleanLiteralAccess().getValAssignment_1(), "rule__BooleanLiteral__ValAssignment_1");
					put(grammarAccess.getKernelLiteralAccess().getValAssignment_0_1(), "rule__KernelLiteral__ValAssignment_0_1");
					put(grammarAccess.getKernelLiteralAccess().getValAssignment_1(), "rule__KernelLiteral__ValAssignment_1");
					put(grammarAccess.getIntervalLiteralAccess().getStartAssignment_2(), "rule__IntervalLiteral__StartAssignment_2");
					put(grammarAccess.getIntervalLiteralAccess().getEndAssignment_4(), "rule__IntervalLiteral__EndAssignment_4");
					put(grammarAccess.getIntervalLiteralAccess().getStepAssignment_5_1(), "rule__IntervalLiteral__StepAssignment_5_1");
					put(grammarAccess.getSetLiteralAccess().getLiteralAssignment_0_2(), "rule__SetLiteral__LiteralAssignment_0_2");
					put(grammarAccess.getSetLiteralAccess().getLiteralAssignment_0_3_1(), "rule__SetLiteral__LiteralAssignment_0_3_1");
					put(grammarAccess.getListLiteralAccess().getLiteralAssignment_0_2(), "rule__ListLiteral__LiteralAssignment_0_2");
					put(grammarAccess.getListLiteralAccess().getLiteralAssignment_0_3_1(), "rule__ListLiteral__LiteralAssignment_0_3_1");
					put(grammarAccess.getBagLiteralAccess().getLiteralAssignment_0_2(), "rule__BagLiteral__LiteralAssignment_0_2");
					put(grammarAccess.getBagLiteralAccess().getLiteralAssignment_0_3_1(), "rule__BagLiteral__LiteralAssignment_0_3_1");
					put(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_2_0(), "rule__MapLiteral__LiteralAssignment_0_2_0");
					put(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_2_2(), "rule__MapLiteral__LiteralAssignment_0_2_2");
					put(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_3_1(), "rule__MapLiteral__LiteralAssignment_0_3_1");
					put(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_3_3(), "rule__MapLiteral__LiteralAssignment_0_3_3");
					put(grammarAccess.getForAllTermAccess().getVarTermAssignment_2(), "rule__ForAllTerm__VarTermAssignment_2");
					put(grammarAccess.getForAllTermAccess().getInTermAssignment_4(), "rule__ForAllTerm__InTermAssignment_4");
					put(grammarAccess.getForAllTermAccess().getVarTermAssignment_5_1(), "rule__ForAllTerm__VarTermAssignment_5_1");
					put(grammarAccess.getForAllTermAccess().getInTermAssignment_5_3(), "rule__ForAllTerm__InTermAssignment_5_3");
					put(grammarAccess.getForAllTermAccess().getWithTermAssignment_7(), "rule__ForAllTerm__WithTermAssignment_7");
					put(grammarAccess.getExistsTermAccess().getUniqueAssignment_2(), "rule__ExistsTerm__UniqueAssignment_2");
					put(grammarAccess.getExistsTermAccess().getVarTermAssignment_3(), "rule__ExistsTerm__VarTermAssignment_3");
					put(grammarAccess.getExistsTermAccess().getInTermAssignment_5(), "rule__ExistsTerm__InTermAssignment_5");
					put(grammarAccess.getExistsTermAccess().getVarTermAssignment_6_1(), "rule__ExistsTerm__VarTermAssignment_6_1");
					put(grammarAccess.getExistsTermAccess().getInTermAssignment_6_3(), "rule__ExistsTerm__InTermAssignment_6_3");
					put(grammarAccess.getExistsTermAccess().getWithTermAssignment_8(), "rule__ExistsTerm__WithTermAssignment_8");
					put(grammarAccess.getSizeOfEnumerableTermAccess().getEnumTermAssignment_2(), "rule__SizeOfEnumerableTerm__EnumTermAssignment_2");
					put(grammarAccess.getPickTermAccess().getVarTermAssignment_1(), "rule__PickTerm__VarTermAssignment_1");
					put(grammarAccess.getPickTermAccess().getEnumTermAssignment_3(), "rule__PickTerm__EnumTermAssignment_3");
					put(grammarAccess.getPickTermAccess().getTermAssignment_4_1(), "rule__PickTerm__TermAssignment_4_1");
					put(grammarAccess.getConditionalTermAccess().getCondAssignment_1(), "rule__ConditionalTerm__CondAssignment_1");
					put(grammarAccess.getConditionalTermAccess().getThenTermAssignment_3(), "rule__ConditionalTerm__ThenTermAssignment_3");
					put(grammarAccess.getConditionalTermAccess().getElseTermAssignment_5(), "rule__ConditionalTerm__ElseTermAssignment_5");
					put(grammarAccess.getCaseTermAccess().getCaseTermAssignment_1(), "rule__CaseTerm__CaseTermAssignment_1");
					put(grammarAccess.getCaseTermAccess().getTermAssignment_3_0(), "rule__CaseTerm__TermAssignment_3_0");
					put(grammarAccess.getCaseTermAccess().getTermActionAssignment_3_2(), "rule__CaseTerm__TermActionAssignment_3_2");
					put(grammarAccess.getCaseTermAccess().getOtherwiseTermAssignment_4_1(), "rule__CaseTerm__OtherwiseTermAssignment_4_1");
					put(grammarAccess.getLetTermAccess().getVarTermAssignment_2(), "rule__LetTerm__VarTermAssignment_2");
					put(grammarAccess.getLetTermAccess().getTermAssignment_4(), "rule__LetTerm__TermAssignment_4");
					put(grammarAccess.getLetTermAccess().getVarTermAssignment_5_1(), "rule__LetTerm__VarTermAssignment_5_1");
					put(grammarAccess.getLetTermAccess().getTermAssignment_5_3(), "rule__LetTerm__TermAssignment_5_3");
					put(grammarAccess.getLetTermAccess().getBodyAssignment_7(), "rule__LetTerm__BodyAssignment_7");
					put(grammarAccess.getRuleAsTermAccess().getRuleAssignment_2(), "rule__RuleAsTerm__RuleAssignment_2");
					put(grammarAccess.getReturnTermAccess().getTermAssignment_2(), "rule__ReturnTerm__TermAssignment_2");
					put(grammarAccess.getSetComprehensionTermAccess().getTermAssignment_2(), "rule__SetComprehensionTerm__TermAssignment_2");
					put(grammarAccess.getSetComprehensionTermAccess().getVarTermAssignment_4(), "rule__SetComprehensionTerm__VarTermAssignment_4");
					put(grammarAccess.getSetComprehensionTermAccess().getEnumTermAssignment_6(), "rule__SetComprehensionTerm__EnumTermAssignment_6");
					put(grammarAccess.getSetComprehensionTermAccess().getVarTermAssignment_7_1(), "rule__SetComprehensionTerm__VarTermAssignment_7_1");
					put(grammarAccess.getSetComprehensionTermAccess().getEnumTermAssignment_7_3(), "rule__SetComprehensionTerm__EnumTermAssignment_7_3");
					put(grammarAccess.getSetComprehensionTermAccess().getTermWithAssignment_8_1(), "rule__SetComprehensionTerm__TermWithAssignment_8_1");
					put(grammarAccess.getListComprehensionTermAccess().getTermAssignment_2(), "rule__ListComprehensionTerm__TermAssignment_2");
					put(grammarAccess.getListComprehensionTermAccess().getVarTermAssignment_4(), "rule__ListComprehensionTerm__VarTermAssignment_4");
					put(grammarAccess.getListComprehensionTermAccess().getEnumTermAssignment_6(), "rule__ListComprehensionTerm__EnumTermAssignment_6");
					put(grammarAccess.getListComprehensionTermAccess().getVarTermAssignment_7_1(), "rule__ListComprehensionTerm__VarTermAssignment_7_1");
					put(grammarAccess.getListComprehensionTermAccess().getEnumTermAssignment_7_3(), "rule__ListComprehensionTerm__EnumTermAssignment_7_3");
					put(grammarAccess.getListComprehensionTermAccess().getTermWithAssignment_8_1(), "rule__ListComprehensionTerm__TermWithAssignment_8_1");
					put(grammarAccess.getBagComprehensionTermAccess().getTermAssignment_2(), "rule__BagComprehensionTerm__TermAssignment_2");
					put(grammarAccess.getBagComprehensionTermAccess().getVarTermAssignment_4(), "rule__BagComprehensionTerm__VarTermAssignment_4");
					put(grammarAccess.getBagComprehensionTermAccess().getEnumTermAssignment_6(), "rule__BagComprehensionTerm__EnumTermAssignment_6");
					put(grammarAccess.getBagComprehensionTermAccess().getVarTermAssignment_7_1(), "rule__BagComprehensionTerm__VarTermAssignment_7_1");
					put(grammarAccess.getBagComprehensionTermAccess().getEnumTermAssignment_7_3(), "rule__BagComprehensionTerm__EnumTermAssignment_7_3");
					put(grammarAccess.getBagComprehensionTermAccess().getTermWithAssignment_8_1(), "rule__BagComprehensionTerm__TermWithAssignment_8_1");
					put(grammarAccess.getMapComprehensionTermAccess().getTerm1Assignment_2(), "rule__MapComprehensionTerm__Term1Assignment_2");
					put(grammarAccess.getMapComprehensionTermAccess().getTerm2Assignment_4(), "rule__MapComprehensionTerm__Term2Assignment_4");
					put(grammarAccess.getMapComprehensionTermAccess().getVarTermAssignment_6(), "rule__MapComprehensionTerm__VarTermAssignment_6");
					put(grammarAccess.getMapComprehensionTermAccess().getEnumTermAssignment_8(), "rule__MapComprehensionTerm__EnumTermAssignment_8");
					put(grammarAccess.getMapComprehensionTermAccess().getVarTermAssignment_9_1(), "rule__MapComprehensionTerm__VarTermAssignment_9_1");
					put(grammarAccess.getMapComprehensionTermAccess().getEnumTermAssignment_9_3(), "rule__MapComprehensionTerm__EnumTermAssignment_9_3");
					put(grammarAccess.getMapComprehensionTermAccess().getTermWithAssignment_10_1(), "rule__MapComprehensionTerm__TermWithAssignment_10_1");
					put(grammarAccess.getNumberRangeTermAccess().getStartAssignment_2(), "rule__NumberRangeTerm__StartAssignment_2");
					put(grammarAccess.getNumberRangeTermAccess().getEndAssignment_4(), "rule__NumberRangeTerm__EndAssignment_4");
					put(grammarAccess.getNumberRangeTermAccess().getStepAssignment_5_1(), "rule__NumberRangeTerm__StepAssignment_5_1");
					put(grammarAccess.getSetTermAccess().getTermAssignment_0_2(), "rule__SetTerm__TermAssignment_0_2");
					put(grammarAccess.getSetTermAccess().getTermAssignment_0_3_1(), "rule__SetTerm__TermAssignment_0_3_1");
					put(grammarAccess.getListTermAccess().getTermAssignment_0_2(), "rule__ListTerm__TermAssignment_0_2");
					put(grammarAccess.getListTermAccess().getTermAssignment_0_3_1(), "rule__ListTerm__TermAssignment_0_3_1");
					put(grammarAccess.getBagTermAccess().getTermAssignment_0_2(), "rule__BagTerm__TermAssignment_0_2");
					put(grammarAccess.getBagTermAccess().getTermAssignment_0_3_1(), "rule__BagTerm__TermAssignment_0_3_1");
					put(grammarAccess.getMapTermAccess().getTermAssignment_0_2_0(), "rule__MapTerm__TermAssignment_0_2_0");
					put(grammarAccess.getMapTermAccess().getTermAssignment_0_2_2(), "rule__MapTerm__TermAssignment_0_2_2");
					put(grammarAccess.getMapTermAccess().getTermAssignment_0_3_1(), "rule__MapTerm__TermAssignment_0_3_1");
					put(grammarAccess.getMapTermAccess().getTermAssignment_0_3_3(), "rule__MapTerm__TermAssignment_0_3_3");
					put(grammarAccess.getStringLiteralAccess().getTextAssignment_1(), "rule__StringLiteral__TextAssignment_1");
					put(grammarAccess.getCharLiteralAccess().getTextAssignment_1(), "rule__CharLiteral__TextAssignment_1");
					put(grammarAccess.getStructuredDomainAccess().getTypeAssignment_0_1(), "rule__StructuredDomain__TypeAssignment_0_1");
					put(grammarAccess.getStructuredDomainAccess().getDomainSetAssignment_0_2_1(), "rule__StructuredDomain__DomainSetAssignment_0_2_1");
					put(grammarAccess.getStructuredDomainAccess().getTypeAssignment_1_0(), "rule__StructuredDomain__TypeAssignment_1_0");
					put(grammarAccess.getStructuredDomainAccess().getDomainBagAssignment_1_1_1(), "rule__StructuredDomain__DomainBagAssignment_1_1_1");
					put(grammarAccess.getStructuredDomainAccess().getTypeAssignment_2_0(), "rule__StructuredDomain__TypeAssignment_2_0");
					put(grammarAccess.getStructuredDomainAccess().getDomainListAssignment_2_1_1(), "rule__StructuredDomain__DomainListAssignment_2_1_1");
					put(grammarAccess.getStructuredDomainAccess().getTypeAssignment_3_0(), "rule__StructuredDomain__TypeAssignment_3_0");
					put(grammarAccess.getStructuredDomainAccess().getDomainMapAssignment_3_1_1(), "rule__StructuredDomain__DomainMapAssignment_3_1_1");
					put(grammarAccess.getStructuredDomainAccess().getDomainMapAssignment_3_1_3(), "rule__StructuredDomain__DomainMapAssignment_3_1_3");
					put(grammarAccess.getExtendableDomainAccess().getTypeAssignment_0_1(), "rule__ExtendableDomain__TypeAssignment_0_1");
					put(grammarAccess.getExtendableDomainAccess().getTypeAssignment_1(), "rule__ExtendableDomain__TypeAssignment_1");
					put(grammarAccess.getExtendableDomainAccess().getTypeAssignment_2(), "rule__ExtendableDomain__TypeAssignment_2");
					put(grammarAccess.getBasicDomainAccess().getTypeBasicDomAssignment_1(), "rule__BasicDomain__TypeBasicDomAssignment_1");
					put(grammarAccess.getNumberLiteralAccess().getValueAssignment_0_1(), "rule__NumberLiteral__ValueAssignment_0_1");
					put(grammarAccess.getNumberLiteralAccess().getValueDecAssignment_1(), "rule__NumberLiteral__ValueDecAssignment_1");
					put(grammarAccess.getTupleLiteralAccess().getLiteralsAssignment_2(), "rule__TupleLiteral__LiteralsAssignment_2");
					put(grammarAccess.getTupleLiteralAccess().getLiteralsAssignment_3_1(), "rule__TupleLiteral__LiteralsAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalTermDslParser typedParser = (InternalTermDslParser) parser;
			typedParser.entryRuleTerm();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public TermDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(TermDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
