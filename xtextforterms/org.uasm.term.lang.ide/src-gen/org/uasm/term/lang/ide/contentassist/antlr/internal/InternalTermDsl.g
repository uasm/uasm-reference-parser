/*
 * generated by Xtext 2.10.0
 */
grammar InternalTermDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.uasm.term.lang.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.uasm.term.lang.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.uasm.term.lang.services.TermDslGrammarAccess;

}
@parser::members {
	private TermDslGrammarAccess grammarAccess;

	public void setGrammarAccess(TermDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getCondTernaryExpressionParserRuleCall()); }
		ruleCondTernaryExpression
		{ after(grammarAccess.getTermAccess().getCondTernaryExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondTernaryExpression
entryRuleCondTernaryExpression
:
{ before(grammarAccess.getCondTernaryExpressionRule()); }
	 ruleCondTernaryExpression
{ after(grammarAccess.getCondTernaryExpressionRule()); } 
	 EOF 
;

// Rule CondTernaryExpression
ruleCondTernaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondTernaryExpressionAccess().getGroup()); }
		(rule__CondTernaryExpression__Group__0)
		{ after(grammarAccess.getCondTernaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression
:
{ before(grammarAccess.getImpliesExpressionRule()); }
	 ruleImpliesExpression
{ after(grammarAccess.getImpliesExpressionRule()); } 
	 EOF 
;

// Rule ImpliesExpression
ruleImpliesExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getGroup()); }
		(rule__ImpliesExpression__Group__0)
		{ after(grammarAccess.getImpliesExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorExpression
entryRuleXorExpression
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
		(rule__XorExpression__Group__0)
		{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationExpression
entryRuleRelationExpression
:
{ before(grammarAccess.getRelationExpressionRule()); }
	 ruleRelationExpression
{ after(grammarAccess.getRelationExpressionRule()); } 
	 EOF 
;

// Rule RelationExpression
ruleRelationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationExpressionAccess().getGroup()); }
		(rule__RelationExpression__Group__0)
		{ after(grammarAccess.getRelationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpression
entryRuleAddExpression
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
		(rule__AddExpression__Group__0)
		{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExpression
entryRuleMultExpression
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
		(rule__MultExpression__Group__0)
		{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePowerExpression
entryRulePowerExpression
:
{ before(grammarAccess.getPowerExpressionRule()); }
	 rulePowerExpression
{ after(grammarAccess.getPowerExpressionRule()); } 
	 EOF 
;

// Rule PowerExpression
rulePowerExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getGroup()); }
		(rule__PowerExpression__Group__0)
		{ after(grammarAccess.getPowerExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicExpression
entryRuleBasicExpression
:
{ before(grammarAccess.getBasicExpressionRule()); }
	 ruleBasicExpression
{ after(grammarAccess.getBasicExpressionRule()); } 
	 EOF 
;

// Rule BasicExpression
ruleBasicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicExpressionAccess().getAlternatives()); }
		(rule__BasicExpression__Alternatives)
		{ after(grammarAccess.getBasicExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicTerm
entryRuleBasicTerm
:
{ before(grammarAccess.getBasicTermRule()); }
	 ruleBasicTerm
{ after(grammarAccess.getBasicTermRule()); } 
	 EOF 
;

// Rule BasicTerm
ruleBasicTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTermAccess().getAlternatives()); }
		(rule__BasicTerm__Alternatives)
		{ after(grammarAccess.getBasicTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleTerm
entryRuleTupleTerm
:
{ before(grammarAccess.getTupleTermRule()); }
	 ruleTupleTerm
{ after(grammarAccess.getTupleTermRule()); } 
	 EOF 
;

// Rule TupleTerm
ruleTupleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTermAccess().getGroup()); }
		(rule__TupleTerm__Group__0)
		{ after(grammarAccess.getTupleTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionTerm
entryRuleFunctionTerm
:
{ before(grammarAccess.getFunctionTermRule()); }
	 ruleFunctionTerm
{ after(grammarAccess.getFunctionTermRule()); } 
	 EOF 
;

// Rule FunctionTerm
ruleFunctionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTermAccess().getGroup()); }
		(rule__FunctionTerm__Group__0)
		{ after(grammarAccess.getFunctionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumTerm
entryRuleEnumTerm
:
{ before(grammarAccess.getEnumTermRule()); }
	 ruleEnumTerm
{ after(grammarAccess.getEnumTermRule()); } 
	 EOF 
;

// Rule EnumTerm
ruleEnumTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTermAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getEnumTermAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerableTerm
entryRuleEnumerableTerm
:
{ before(grammarAccess.getEnumerableTermRule()); }
	 ruleEnumerableTerm
{ after(grammarAccess.getEnumerableTermRule()); } 
	 EOF 
;

// Rule EnumerableTerm
ruleEnumerableTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerableTermAccess().getAlternatives()); }
		(rule__EnumerableTerm__Alternatives)
		{ after(grammarAccess.getEnumerableTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableTerm
entryRuleVariableTerm
:
{ before(grammarAccess.getVariableTermRule()); }
	 ruleVariableTerm
{ after(grammarAccess.getVariableTermRule()); } 
	 EOF 
;

// Rule VariableTerm
ruleVariableTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableTermAccess().getIdFunctionParserRuleCall()); }
		ruleIdFunction
		{ after(grammarAccess.getVariableTermAccess().getIdFunctionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocationTerm
entryRuleLocationTerm
:
{ before(grammarAccess.getLocationTermRule()); }
	 ruleLocationTerm
{ after(grammarAccess.getLocationTermRule()); } 
	 EOF 
;

// Rule LocationTerm
ruleLocationTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationTermAccess().getAlternatives()); }
		(rule__LocationTerm__Alternatives)
		{ after(grammarAccess.getLocationTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
		(rule__BooleanLiteral__Alternatives)
		{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKernelLiteral
entryRuleKernelLiteral
:
{ before(grammarAccess.getKernelLiteralRule()); }
	 ruleKernelLiteral
{ after(grammarAccess.getKernelLiteralRule()); } 
	 EOF 
;

// Rule KernelLiteral
ruleKernelLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKernelLiteralAccess().getAlternatives()); }
		(rule__KernelLiteral__Alternatives)
		{ after(grammarAccess.getKernelLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntervalLiteral
entryRuleIntervalLiteral
:
{ before(grammarAccess.getIntervalLiteralRule()); }
	 ruleIntervalLiteral
{ after(grammarAccess.getIntervalLiteralRule()); } 
	 EOF 
;

// Rule IntervalLiteral
ruleIntervalLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalLiteralAccess().getGroup()); }
		(rule__IntervalLiteral__Group__0)
		{ after(grammarAccess.getIntervalLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetLiteral
entryRuleSetLiteral
:
{ before(grammarAccess.getSetLiteralRule()); }
	 ruleSetLiteral
{ after(grammarAccess.getSetLiteralRule()); } 
	 EOF 
;

// Rule SetLiteral
ruleSetLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetLiteralAccess().getAlternatives()); }
		(rule__SetLiteral__Alternatives)
		{ after(grammarAccess.getSetLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListLiteral
entryRuleListLiteral
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListLiteralAccess().getAlternatives()); }
		(rule__ListLiteral__Alternatives)
		{ after(grammarAccess.getListLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagLiteral
entryRuleBagLiteral
:
{ before(grammarAccess.getBagLiteralRule()); }
	 ruleBagLiteral
{ after(grammarAccess.getBagLiteralRule()); } 
	 EOF 
;

// Rule BagLiteral
ruleBagLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagLiteralAccess().getAlternatives()); }
		(rule__BagLiteral__Alternatives)
		{ after(grammarAccess.getBagLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapLiteral
entryRuleMapLiteral
:
{ before(grammarAccess.getMapLiteralRule()); }
	 ruleMapLiteral
{ after(grammarAccess.getMapLiteralRule()); } 
	 EOF 
;

// Rule MapLiteral
ruleMapLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapLiteralAccess().getAlternatives()); }
		(rule__MapLiteral__Alternatives)
		{ after(grammarAccess.getMapLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForAllTerm
entryRuleForAllTerm
:
{ before(grammarAccess.getForAllTermRule()); }
	 ruleForAllTerm
{ after(grammarAccess.getForAllTermRule()); } 
	 EOF 
;

// Rule ForAllTerm
ruleForAllTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAllTermAccess().getGroup()); }
		(rule__ForAllTerm__Group__0)
		{ after(grammarAccess.getForAllTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistsTerm
entryRuleExistsTerm
:
{ before(grammarAccess.getExistsTermRule()); }
	 ruleExistsTerm
{ after(grammarAccess.getExistsTermRule()); } 
	 EOF 
;

// Rule ExistsTerm
ruleExistsTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistsTermAccess().getGroup()); }
		(rule__ExistsTerm__Group__0)
		{ after(grammarAccess.getExistsTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSizeOfEnumerableTerm
entryRuleSizeOfEnumerableTerm
:
{ before(grammarAccess.getSizeOfEnumerableTermRule()); }
	 ruleSizeOfEnumerableTerm
{ after(grammarAccess.getSizeOfEnumerableTermRule()); } 
	 EOF 
;

// Rule SizeOfEnumerableTerm
ruleSizeOfEnumerableTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSizeOfEnumerableTermAccess().getGroup()); }
		(rule__SizeOfEnumerableTerm__Group__0)
		{ after(grammarAccess.getSizeOfEnumerableTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePickTerm
entryRulePickTerm
:
{ before(grammarAccess.getPickTermRule()); }
	 rulePickTerm
{ after(grammarAccess.getPickTermRule()); } 
	 EOF 
;

// Rule PickTerm
rulePickTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPickTermAccess().getGroup()); }
		(rule__PickTerm__Group__0)
		{ after(grammarAccess.getPickTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm
:
{ before(grammarAccess.getConditionalTermRule()); }
	 ruleConditionalTerm
{ after(grammarAccess.getConditionalTermRule()); } 
	 EOF 
;

// Rule ConditionalTerm
ruleConditionalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalTermAccess().getGroup()); }
		(rule__ConditionalTerm__Group__0)
		{ after(grammarAccess.getConditionalTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseTerm
entryRuleCaseTerm
:
{ before(grammarAccess.getCaseTermRule()); }
	 ruleCaseTerm
{ after(grammarAccess.getCaseTermRule()); } 
	 EOF 
;

// Rule CaseTerm
ruleCaseTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseTermAccess().getGroup()); }
		(rule__CaseTerm__Group__0)
		{ after(grammarAccess.getCaseTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetTerm
entryRuleLetTerm
:
{ before(grammarAccess.getLetTermRule()); }
	 ruleLetTerm
{ after(grammarAccess.getLetTermRule()); } 
	 EOF 
;

// Rule LetTerm
ruleLetTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetTermAccess().getGroup()); }
		(rule__LetTerm__Group__0)
		{ after(grammarAccess.getLetTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleAsTerm
entryRuleRuleAsTerm
:
{ before(grammarAccess.getRuleAsTermRule()); }
	 ruleRuleAsTerm
{ after(grammarAccess.getRuleAsTermRule()); } 
	 EOF 
;

// Rule RuleAsTerm
ruleRuleAsTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAsTermAccess().getGroup()); }
		(rule__RuleAsTerm__Group__0)
		{ after(grammarAccess.getRuleAsTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnTerm
entryRuleReturnTerm
:
{ before(grammarAccess.getReturnTermRule()); }
	 ruleReturnTerm
{ after(grammarAccess.getReturnTermRule()); } 
	 EOF 
;

// Rule ReturnTerm
ruleReturnTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnTermAccess().getGroup()); }
		(rule__ReturnTerm__Group__0)
		{ after(grammarAccess.getReturnTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComprehensionTerm
entryRuleComprehensionTerm
:
{ before(grammarAccess.getComprehensionTermRule()); }
	 ruleComprehensionTerm
{ after(grammarAccess.getComprehensionTermRule()); } 
	 EOF 
;

// Rule ComprehensionTerm
ruleComprehensionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComprehensionTermAccess().getAlternatives()); }
		(rule__ComprehensionTerm__Alternatives)
		{ after(grammarAccess.getComprehensionTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetComprehensionTerm
entryRuleSetComprehensionTerm
:
{ before(grammarAccess.getSetComprehensionTermRule()); }
	 ruleSetComprehensionTerm
{ after(grammarAccess.getSetComprehensionTermRule()); } 
	 EOF 
;

// Rule SetComprehensionTerm
ruleSetComprehensionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getGroup()); }
		(rule__SetComprehensionTerm__Group__0)
		{ after(grammarAccess.getSetComprehensionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListComprehensionTerm
entryRuleListComprehensionTerm
:
{ before(grammarAccess.getListComprehensionTermRule()); }
	 ruleListComprehensionTerm
{ after(grammarAccess.getListComprehensionTermRule()); } 
	 EOF 
;

// Rule ListComprehensionTerm
ruleListComprehensionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getGroup()); }
		(rule__ListComprehensionTerm__Group__0)
		{ after(grammarAccess.getListComprehensionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagComprehensionTerm
entryRuleBagComprehensionTerm
:
{ before(grammarAccess.getBagComprehensionTermRule()); }
	 ruleBagComprehensionTerm
{ after(grammarAccess.getBagComprehensionTermRule()); } 
	 EOF 
;

// Rule BagComprehensionTerm
ruleBagComprehensionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getGroup()); }
		(rule__BagComprehensionTerm__Group__0)
		{ after(grammarAccess.getBagComprehensionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapComprehensionTerm
entryRuleMapComprehensionTerm
:
{ before(grammarAccess.getMapComprehensionTermRule()); }
	 ruleMapComprehensionTerm
{ after(grammarAccess.getMapComprehensionTermRule()); } 
	 EOF 
;

// Rule MapComprehensionTerm
ruleMapComprehensionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getGroup()); }
		(rule__MapComprehensionTerm__Group__0)
		{ after(grammarAccess.getMapComprehensionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberRangeTerm
entryRuleNumberRangeTerm
:
{ before(grammarAccess.getNumberRangeTermRule()); }
	 ruleNumberRangeTerm
{ after(grammarAccess.getNumberRangeTermRule()); } 
	 EOF 
;

// Rule NumberRangeTerm
ruleNumberRangeTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberRangeTermAccess().getGroup()); }
		(rule__NumberRangeTerm__Group__0)
		{ after(grammarAccess.getNumberRangeTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructureTerm
entryRuleStructureTerm
:
{ before(grammarAccess.getStructureTermRule()); }
	 ruleStructureTerm
{ after(grammarAccess.getStructureTermRule()); } 
	 EOF 
;

// Rule StructureTerm
ruleStructureTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructureTermAccess().getAlternatives()); }
		(rule__StructureTerm__Alternatives)
		{ after(grammarAccess.getStructureTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetTerm
entryRuleSetTerm
:
{ before(grammarAccess.getSetTermRule()); }
	 ruleSetTerm
{ after(grammarAccess.getSetTermRule()); } 
	 EOF 
;

// Rule SetTerm
ruleSetTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetTermAccess().getAlternatives()); }
		(rule__SetTerm__Alternatives)
		{ after(grammarAccess.getSetTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListTerm
entryRuleListTerm
:
{ before(grammarAccess.getListTermRule()); }
	 ruleListTerm
{ after(grammarAccess.getListTermRule()); } 
	 EOF 
;

// Rule ListTerm
ruleListTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListTermAccess().getAlternatives()); }
		(rule__ListTerm__Alternatives)
		{ after(grammarAccess.getListTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagTerm
entryRuleBagTerm
:
{ before(grammarAccess.getBagTermRule()); }
	 ruleBagTerm
{ after(grammarAccess.getBagTermRule()); } 
	 EOF 
;

// Rule BagTerm
ruleBagTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagTermAccess().getAlternatives()); }
		(rule__BagTerm__Alternatives)
		{ after(grammarAccess.getBagTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapTerm
entryRuleMapTerm
:
{ before(grammarAccess.getMapTermRule()); }
	 ruleMapTerm
{ after(grammarAccess.getMapTermRule()); } 
	 EOF 
;

// Rule MapTerm
ruleMapTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTermAccess().getAlternatives()); }
		(rule__MapTerm__Alternatives)
		{ after(grammarAccess.getMapTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdDomain
entryRuleIdDomain
:
{ before(grammarAccess.getIdDomainRule()); }
	 ruleIdDomain
{ after(grammarAccess.getIdDomainRule()); } 
	 EOF 
;

// Rule IdDomain
ruleIdDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdDomainAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdDomainAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdFunction
entryRuleIdFunction
:
{ before(grammarAccess.getIdFunctionRule()); }
	 ruleIdFunction
{ after(grammarAccess.getIdFunctionRule()); } 
	 EOF 
;

// Rule IdFunction
ruleIdFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdFunctionAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdFunctionAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdRule
entryRuleIdRule
:
{ before(grammarAccess.getIdRuleRule()); }
	 ruleIdRule
{ after(grammarAccess.getIdRuleRule()); } 
	 EOF 
;

// Rule IdRule
ruleIdRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdRuleAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdRuleAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
		(rule__StringLiteral__Group__0)
		{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharLiteral
entryRuleCharLiteral
:
{ before(grammarAccess.getCharLiteralRule()); }
	 ruleCharLiteral
{ after(grammarAccess.getCharLiteralRule()); } 
	 EOF 
;

// Rule CharLiteral
ruleCharLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharLiteralAccess().getGroup()); }
		(rule__CharLiteral__Group__0)
		{ after(grammarAccess.getCharLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomain
entryRuleDomain
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAccess().getAlternatives()); }
		(rule__Domain__Alternatives)
		{ after(grammarAccess.getDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructuredDomain
entryRuleStructuredDomain
:
{ before(grammarAccess.getStructuredDomainRule()); }
	 ruleStructuredDomain
{ after(grammarAccess.getStructuredDomainRule()); } 
	 EOF 
;

// Rule StructuredDomain
ruleStructuredDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getAlternatives()); }
		(rule__StructuredDomain__Alternatives)
		{ after(grammarAccess.getStructuredDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendableDomain
entryRuleExtendableDomain
:
{ before(grammarAccess.getExtendableDomainRule()); }
	 ruleExtendableDomain
{ after(grammarAccess.getExtendableDomainRule()); } 
	 EOF 
;

// Rule ExtendableDomain
ruleExtendableDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendableDomainAccess().getAlternatives()); }
		(rule__ExtendableDomain__Alternatives)
		{ after(grammarAccess.getExtendableDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicDomain
entryRuleBasicDomain
:
{ before(grammarAccess.getBasicDomainRule()); }
	 ruleBasicDomain
{ after(grammarAccess.getBasicDomainRule()); } 
	 EOF 
;

// Rule BasicDomain
ruleBasicDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicDomainAccess().getGroup()); }
		(rule__BasicDomain__Group__0)
		{ after(grammarAccess.getBasicDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getAlternatives()); }
		(rule__NumberLiteral__Alternatives)
		{ after(grammarAccess.getNumberLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleLiteral
entryRuleTupleLiteral
:
{ before(grammarAccess.getTupleLiteralRule()); }
	 ruleTupleLiteral
{ after(grammarAccess.getTupleLiteralRule()); } 
	 EOF 
;

// Rule TupleLiteral
ruleTupleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleLiteralAccess().getGroup()); }
		(rule__TupleLiteral__Group__0)
		{ after(grammarAccess.getTupleLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BasicDomainEnum
ruleBasicDomainEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getAlternatives()); }
		(rule__BasicDomainEnum__Alternatives)
		{ after(grammarAccess.getBasicDomainEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_0()); }
		'!='
		{ after(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_1_0_1()); }
		'='
		{ after(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationExpressionAccess().getOpLessThanSignKeyword_1_1_0_0()); }
		'<'
		{ after(grammarAccess.getRelationExpressionAccess().getOpLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
		'>'
		{ after(grammarAccess.getRelationExpressionAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
		'<='
		{ after(grammarAccess.getRelationExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		'>='
		{ after(grammarAccess.getRelationExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationExpressionAccess().getOpMemberofKeyword_1_1_0_4()); }
		'memberof'
		{ after(grammarAccess.getRelationExpressionAccess().getOpMemberofKeyword_1_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAddExpressionAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAddExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultExpressionAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultExpressionAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpressionAccess().getOpModKeyword_1_1_0_2()); }
		'mod'
		{ after(grammarAccess.getMultExpressionAccess().getOpModKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultExpressionAccess().getOpDivKeyword_1_1_0_3()); }
		'div'
		{ after(grammarAccess.getMultExpressionAccess().getOpDivKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
		(rule__UnaryExpression__Group_0__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
		(rule__UnaryExpression__Group_1__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getBasicExpressionParserRuleCall_2()); }
		ruleBasicExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getBasicExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicExpressionAccess().getBasicTermParserRuleCall_0()); }
		ruleBasicTerm
		{ after(grammarAccess.getBasicExpressionAccess().getBasicTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicExpressionAccess().getGroup_1()); }
		(rule__BasicExpression__Group_1__0)
		{ after(grammarAccess.getBasicExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTermAccess().getTupleTermParserRuleCall_0()); }
		ruleTupleTerm
		{ after(grammarAccess.getBasicTermAccess().getTupleTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_1()); }
		ruleLocationTerm
		{ after(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getComprehensionTermParserRuleCall_2()); }
		ruleComprehensionTerm
		{ after(grammarAccess.getBasicTermAccess().getComprehensionTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getStructureTermParserRuleCall_3()); }
		ruleStructureTerm
		{ after(grammarAccess.getBasicTermAccess().getStructureTermParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getPickTermParserRuleCall_4()); }
		rulePickTerm
		{ after(grammarAccess.getBasicTermAccess().getPickTermParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getConditionalTermParserRuleCall_5()); }
		ruleConditionalTerm
		{ after(grammarAccess.getBasicTermAccess().getConditionalTermParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getCaseTermParserRuleCall_6()); }
		ruleCaseTerm
		{ after(grammarAccess.getBasicTermAccess().getCaseTermParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getRuleAsTermParserRuleCall_7()); }
		ruleRuleAsTerm
		{ after(grammarAccess.getBasicTermAccess().getRuleAsTermParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getReturnTermParserRuleCall_8()); }
		ruleReturnTerm
		{ after(grammarAccess.getBasicTermAccess().getReturnTermParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getForAllTermParserRuleCall_9()); }
		ruleForAllTerm
		{ after(grammarAccess.getBasicTermAccess().getForAllTermParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getExistsTermParserRuleCall_10()); }
		ruleExistsTerm
		{ after(grammarAccess.getBasicTermAccess().getExistsTermParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getLetTermParserRuleCall_11()); }
		ruleLetTerm
		{ after(grammarAccess.getBasicTermAccess().getLetTermParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getLiteralParserRuleCall_12()); }
		ruleLiteral
		{ after(grammarAccess.getBasicTermAccess().getLiteralParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getTupleLiteralParserRuleCall_13()); }
		ruleTupleLiteral
		{ after(grammarAccess.getBasicTermAccess().getTupleLiteralParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getSizeOfEnumerableTermParserRuleCall_14()); }
		ruleSizeOfEnumerableTerm
		{ after(grammarAccess.getBasicTermAccess().getSizeOfEnumerableTermParserRuleCall_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getGroup_2_0()); }
		(rule__FunctionTerm__Group_2_0__0)
		{ after(grammarAccess.getFunctionTermAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionTermAccess().getArgsTupleAssignment_2_1()); }
		(rule__FunctionTerm__ArgsTupleAssignment_2_1)
		{ after(grammarAccess.getFunctionTermAccess().getArgsTupleAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerableTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerableTermAccess().getTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getEnumerableTermAccess().getTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumerableTermAccess().getDomAssignment_1()); }
		(rule__EnumerableTerm__DomAssignment_1)
		{ after(grammarAccess.getEnumerableTermAccess().getDomAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationTermAccess().getGroup_0()); }
		(rule__LocationTerm__Group_0__0)
		{ after(grammarAccess.getLocationTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLocationTermAccess().getResultAssignment_1()); }
		(rule__LocationTerm__ResultAssignment_1)
		{ after(grammarAccess.getLocationTermAccess().getResultAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntervalLiteralParserRuleCall_0()); }
		ruleIntervalLiteral
		{ after(grammarAccess.getLiteralAccess().getIntervalLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_1()); }
		ruleSetLiteral
		{ after(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2()); }
		ruleListLiteral
		{ after(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBagLiteralParserRuleCall_3()); }
		ruleBagLiteral
		{ after(grammarAccess.getLiteralAccess().getBagLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_4()); }
		ruleMapLiteral
		{ after(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_5()); }
		ruleNumberLiteral
		{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_6()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getKernelLiteralParserRuleCall_7()); }
		ruleKernelLiteral
		{ after(grammarAccess.getLiteralAccess().getKernelLiteralParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_8()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_9()); }
		ruleCharLiteral
		{ after(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getEnumTermParserRuleCall_10()); }
		ruleEnumTerm
		{ after(grammarAccess.getLiteralAccess().getEnumTermParserRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getGroup_0()); }
		(rule__BooleanLiteral__Group_0__0)
		{ after(grammarAccess.getBooleanLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValAssignment_1()); }
		(rule__BooleanLiteral__ValAssignment_1)
		{ after(grammarAccess.getBooleanLiteralAccess().getValAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KernelLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKernelLiteralAccess().getGroup_0()); }
		(rule__KernelLiteral__Group_0__0)
		{ after(grammarAccess.getKernelLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getKernelLiteralAccess().getValAssignment_1()); }
		(rule__KernelLiteral__ValAssignment_1)
		{ after(grammarAccess.getKernelLiteralAccess().getValAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetLiteralAccess().getGroup_0()); }
		(rule__SetLiteral__Group_0__0)
		{ after(grammarAccess.getSetLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetLiteralAccess().getGroup_1()); }
		(rule__SetLiteral__Group_1__0)
		{ after(grammarAccess.getSetLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getGroup_0()); }
		(rule__ListLiteral__Group_0__0)
		{ after(grammarAccess.getListLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getListLiteralAccess().getGroup_1()); }
		(rule__ListLiteral__Group_1__0)
		{ after(grammarAccess.getListLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagLiteralAccess().getGroup_0()); }
		(rule__BagLiteral__Group_0__0)
		{ after(grammarAccess.getBagLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBagLiteralAccess().getGroup_1()); }
		(rule__BagLiteral__Group_1__0)
		{ after(grammarAccess.getBagLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getGroup_0()); }
		(rule__MapLiteral__Group_0__0)
		{ after(grammarAccess.getMapLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMapLiteralAccess().getGroup_1()); }
		(rule__MapLiteral__Group_1__0)
		{ after(grammarAccess.getMapLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComprehensionTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComprehensionTermAccess().getSetComprehensionTermParserRuleCall_0()); }
		ruleSetComprehensionTerm
		{ after(grammarAccess.getComprehensionTermAccess().getSetComprehensionTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getListComprehensionTermParserRuleCall_1()); }
		ruleListComprehensionTerm
		{ after(grammarAccess.getComprehensionTermAccess().getListComprehensionTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getMapComprehensionTermParserRuleCall_2()); }
		ruleMapComprehensionTerm
		{ after(grammarAccess.getComprehensionTermAccess().getMapComprehensionTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getBagComprehensionTermParserRuleCall_3()); }
		ruleBagComprehensionTerm
		{ after(grammarAccess.getComprehensionTermAccess().getBagComprehensionTermParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getNumberRangeTermParserRuleCall_4()); }
		ruleNumberRangeTerm
		{ after(grammarAccess.getComprehensionTermAccess().getNumberRangeTermParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureTermAccess().getSetTermParserRuleCall_0()); }
		ruleSetTerm
		{ after(grammarAccess.getStructureTermAccess().getSetTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructureTermAccess().getListTermParserRuleCall_1()); }
		ruleListTerm
		{ after(grammarAccess.getStructureTermAccess().getListTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStructureTermAccess().getBagTermParserRuleCall_2()); }
		ruleBagTerm
		{ after(grammarAccess.getStructureTermAccess().getBagTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStructureTermAccess().getMapTermParserRuleCall_3()); }
		ruleMapTerm
		{ after(grammarAccess.getStructureTermAccess().getMapTermParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getGroup_0()); }
		(rule__SetTerm__Group_0__0)
		{ after(grammarAccess.getSetTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetTermAccess().getGroup_1()); }
		(rule__SetTerm__Group_1__0)
		{ after(grammarAccess.getSetTermAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTermAccess().getGroup_0()); }
		(rule__ListTerm__Group_0__0)
		{ after(grammarAccess.getListTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getListTermAccess().getGroup_1()); }
		(rule__ListTerm__Group_1__0)
		{ after(grammarAccess.getListTermAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getGroup_0()); }
		(rule__BagTerm__Group_0__0)
		{ after(grammarAccess.getBagTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBagTermAccess().getGroup_1()); }
		(rule__BagTerm__Group_1__0)
		{ after(grammarAccess.getBagTermAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getGroup_0()); }
		(rule__MapTerm__Group_0__0)
		{ after(grammarAccess.getMapTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMapTermAccess().getGroup_1()); }
		(rule__MapTerm__Group_1__0)
		{ after(grammarAccess.getMapTermAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getStructuredDomainParserRuleCall_0()); }
		ruleStructuredDomain
		{ after(grammarAccess.getDomainAccess().getStructuredDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainAccess().getBasicDomainParserRuleCall_1()); }
		ruleBasicDomain
		{ after(grammarAccess.getDomainAccess().getBasicDomainParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDomainAccess().getExtendableDomainParserRuleCall_2()); }
		ruleExtendableDomain
		{ after(grammarAccess.getDomainAccess().getExtendableDomainParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getGroup_0()); }
		(rule__StructuredDomain__Group_0__0)
		{ after(grammarAccess.getStructuredDomainAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredDomainAccess().getGroup_1()); }
		(rule__StructuredDomain__Group_1__0)
		{ after(grammarAccess.getStructuredDomainAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredDomainAccess().getGroup_2()); }
		(rule__StructuredDomain__Group_2__0)
		{ after(grammarAccess.getStructuredDomainAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredDomainAccess().getGroup_3()); }
		(rule__StructuredDomain__Group_3__0)
		{ after(grammarAccess.getStructuredDomainAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendableDomainAccess().getGroup_0()); }
		(rule__ExtendableDomain__Group_0__0)
		{ after(grammarAccess.getExtendableDomainAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendableDomainAccess().getTypeAssignment_1()); }
		(rule__ExtendableDomain__TypeAssignment_1)
		{ after(grammarAccess.getExtendableDomainAccess().getTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendableDomainAccess().getTypeAssignment_2()); }
		(rule__ExtendableDomain__TypeAssignment_2)
		{ after(grammarAccess.getExtendableDomainAccess().getTypeAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getGroup_0()); }
		(rule__NumberLiteral__Group_0__0)
		{ after(grammarAccess.getNumberLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueDecAssignment_1()); }
		(rule__NumberLiteral__ValueDecAssignment_1)
		{ after(grammarAccess.getNumberLiteralAccess().getValueDecAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicDomainEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getStringEnumLiteralDeclaration_0()); }
		('STRING')
		{ after(grammarAccess.getBasicDomainEnumAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getNumberEnumLiteralDeclaration_1()); }
		('NUMBER')
		{ after(grammarAccess.getBasicDomainEnumAccess().getNumberEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getIntegerEnumLiteralDeclaration_2()); }
		('INTEGER')
		{ after(grammarAccess.getBasicDomainEnumAccess().getIntegerEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getCharEnumLiteralDeclaration_3()); }
		('CHAR')
		{ after(grammarAccess.getBasicDomainEnumAccess().getCharEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getBooleanEnumLiteralDeclaration_4()); }
		('BOOLEAN')
		{ after(grammarAccess.getBasicDomainEnumAccess().getBooleanEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDomainEnumAccess().getRuleEnumLiteralDeclaration_5()); }
		('RULE')
		{ after(grammarAccess.getBasicDomainEnumAccess().getRuleEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group__0__Impl
	rule__CondTernaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getImpliesExpressionParserRuleCall_0()); }
	ruleImpliesExpression
	{ after(grammarAccess.getCondTernaryExpressionAccess().getImpliesExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getGroup_1()); }
	(rule__CondTernaryExpression__Group_1__0)*
	{ after(grammarAccess.getCondTernaryExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondTernaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group_1__0__Impl
	rule__CondTernaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getCondTernaryExpressionCondAction_1_0()); }
	()
	{ after(grammarAccess.getCondTernaryExpressionAccess().getCondTernaryExpressionCondAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group_1__1__Impl
	rule__CondTernaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getQuestionMarkKeyword_1_1()); }
	'?'
	{ after(grammarAccess.getCondTernaryExpressionAccess().getQuestionMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group_1__2__Impl
	rule__CondTernaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getThenAssignment_1_2()); }
	(rule__CondTernaryExpression__ThenAssignment_1_2)
	{ after(grammarAccess.getCondTernaryExpressionAccess().getThenAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group_1__3__Impl
	rule__CondTernaryExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getCondTernaryExpressionAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondTernaryExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondTernaryExpressionAccess().getElseAssignment_1_4()); }
	(rule__CondTernaryExpression__ElseAssignment_1_4)
	{ after(grammarAccess.getCondTernaryExpressionAccess().getElseAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__0__Impl
	rule__ImpliesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getImpliesExpressionAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
	(rule__ImpliesExpression__Group_1__0)*
	{ after(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__0__Impl
	rule__ImpliesExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getImpliesExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__1__Impl
	rule__ImpliesExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getOpAssignment_1_1()); }
	(rule__ImpliesExpression__OpAssignment_1_1)
	{ after(grammarAccess.getImpliesExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2()); }
	(rule__ImpliesExpression__RightAssignment_1_2)
	{ after(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
	ruleXorExpression
	{ after(grammarAccess.getOrExpressionAccess().getXorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
	(rule__OrExpression__OpAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
	(rule__XorExpression__Group_1__0)*
	{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getXorExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__1__Impl
	rule__XorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getOpAssignment_1_1()); }
	(rule__XorExpression__OpAssignment_1_1)
	{ after(grammarAccess.getXorExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
	(rule__XorExpression__RightAssignment_1_2)
	{ after(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
	(rule__AndExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRelationExpressionParserRuleCall_0()); }
	ruleRelationExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getRelationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1()); }
	(rule__EqualityExpression__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationExpression__Group__0__Impl
	rule__RelationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationExpressionAccess().getAddExpressionParserRuleCall_0()); }
	ruleAddExpression
	{ after(grammarAccess.getRelationExpressionAccess().getAddExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationExpressionAccess().getGroup_1()); }
	(rule__RelationExpression__Group_1__0)*
	{ after(grammarAccess.getRelationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationExpression__Group_1__0__Impl
	rule__RelationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationExpression__Group_1__1__Impl
	rule__RelationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationExpressionAccess().getOpAssignment_1_1()); }
	(rule__RelationExpression__OpAssignment_1_1)
	{ after(grammarAccess.getRelationExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationExpressionAccess().getRightAssignment_1_2()); }
	(rule__RelationExpression__RightAssignment_1_2)
	{ after(grammarAccess.getRelationExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getMultExpressionParserRuleCall_0()); }
	ruleMultExpression
	{ after(grammarAccess.getAddExpressionAccess().getMultExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
	(rule__AddExpression__Group_1__0)*
	{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAddExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getOpAssignment_1_1()); }
	(rule__AddExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAddExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2()); }
	(rule__AddExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getPowerExpressionParserRuleCall_0()); }
	rulePowerExpression
	{ after(grammarAccess.getMultExpressionAccess().getPowerExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getGroup_1()); }
	(rule__MultExpression__Group_1__0)*
	{ after(grammarAccess.getMultExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group_1__0__Impl
	rule__MultExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group_1__1__Impl
	rule__MultExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getOpAssignment_1_1()); }
	(rule__MultExpression__OpAssignment_1_1)
	{ after(grammarAccess.getMultExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExpressionAccess().getRightAssignment_1_2()); }
	(rule__MultExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMultExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group__0__Impl
	rule__PowerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
	(rule__PowerExpression__Group_1__0)*
	{ after(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__0__Impl
	rule__PowerExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPowerExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__1__Impl
	rule__PowerExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getOpAssignment_1_1()); }
	(rule__PowerExpression__OpAssignment_1_1)
	{ after(grammarAccess.getPowerExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2()); }
	(rule__PowerExpression__RightAssignment_1_2)
	{ after(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getBooleanNegationAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getBooleanNegationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__1__Impl
	rule__UnaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_1()); }
	(rule__UnaryExpression__OpAssignment_0_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2()); }
	(rule__UnaryExpression__ExpressionAssignment_0_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getArithmeticSignedAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getArithmeticSignedAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__1__Impl
	rule__UnaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_1_1()); }
	(rule__UnaryExpression__OpAssignment_1_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_1_2()); }
	(rule__UnaryExpression__ExpressionAssignment_1_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicExpression__Group_1__0__Impl
	rule__BasicExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getBasicExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicExpression__Group_1__1__Impl
	rule__BasicExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicExpressionAccess().getTermParserRuleCall_1_1()); }
	ruleTerm
	{ after(grammarAccess.getBasicExpressionAccess().getTermParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getBasicExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__0__Impl
	rule__TupleTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getTupleTermAction_0()); }
	()
	{ after(grammarAccess.getTupleTermAccess().getTupleTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__1__Impl
	rule__TupleTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__2__Impl
	rule__TupleTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getTermAssignment_2()); }
	(rule__TupleTerm__TermAssignment_2)
	{ after(grammarAccess.getTupleTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__3__Impl
	rule__TupleTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTupleTermAccess().getGroup_3()); }
		(rule__TupleTerm__Group_3__0)
		{ after(grammarAccess.getTupleTermAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getTupleTermAccess().getGroup_3()); }
		(rule__TupleTerm__Group_3__0)*
		{ after(grammarAccess.getTupleTermAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTerm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group_3__0__Impl
	rule__TupleTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTupleTermAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getTermAssignment_3_1()); }
	(rule__TupleTerm__TermAssignment_3_1)
	{ after(grammarAccess.getTupleTermAccess().getTermAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group__0__Impl
	rule__FunctionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getFunctionTermAction_0()); }
	()
	{ after(grammarAccess.getFunctionTermAccess().getFunctionTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group__1__Impl
	rule__FunctionTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getFunctionAssignment_1()); }
	(rule__FunctionTerm__FunctionAssignment_1)
	{ after(grammarAccess.getFunctionTermAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getAlternatives_2()); }
	(rule__FunctionTerm__Alternatives_2)?
	{ after(grammarAccess.getFunctionTermAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTerm__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group_2_0__0__Impl
	rule__FunctionTerm__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getLeftParenthesisKeyword_2_0_0()); }
	'('
	{ after(grammarAccess.getFunctionTermAccess().getLeftParenthesisKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group_2_0__1__Impl
	rule__FunctionTerm__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getArgsAssignment_2_0_1()); }
	(rule__FunctionTerm__ArgsAssignment_2_0_1)
	{ after(grammarAccess.getFunctionTermAccess().getArgsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getRightParenthesisKeyword_2_0_2()); }
	')'
	{ after(grammarAccess.getFunctionTermAccess().getRightParenthesisKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocationTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group_0__0__Impl
	rule__LocationTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getLocationTermAction_0_0()); }
	()
	{ after(grammarAccess.getLocationTermAccess().getLocationTermAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getFunctionAssignment_0_1()); }
	(rule__LocationTerm__FunctionAssignment_0_1)
	{ after(grammarAccess.getLocationTermAccess().getFunctionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_0__0__Impl
	rule__BooleanLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getValAssignment_0_1()); }
	(rule__BooleanLiteral__ValAssignment_0_1)
	{ after(grammarAccess.getBooleanLiteralAccess().getValAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KernelLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KernelLiteral__Group_0__0__Impl
	rule__KernelLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KernelLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKernelLiteralAccess().getKernelLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getKernelLiteralAccess().getKernelLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KernelLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KernelLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KernelLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKernelLiteralAccess().getValAssignment_0_1()); }
	(rule__KernelLiteral__ValAssignment_0_1)
	{ after(grammarAccess.getKernelLiteralAccess().getValAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntervalLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__0__Impl
	rule__IntervalLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getIntervalLiteralAction_0()); }
	()
	{ after(grammarAccess.getIntervalLiteralAccess().getIntervalLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__1__Impl
	rule__IntervalLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getIntervalLiteralAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__2__Impl
	rule__IntervalLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getStartAssignment_2()); }
	(rule__IntervalLiteral__StartAssignment_2)
	{ after(grammarAccess.getIntervalLiteralAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__3__Impl
	rule__IntervalLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getFullStopFullStopKeyword_3()); }
	'..'
	{ after(grammarAccess.getIntervalLiteralAccess().getFullStopFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__4__Impl
	rule__IntervalLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getEndAssignment_4()); }
	(rule__IntervalLiteral__EndAssignment_4)
	{ after(grammarAccess.getIntervalLiteralAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__5__Impl
	rule__IntervalLiteral__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getGroup_5()); }
	(rule__IntervalLiteral__Group_5__0)?
	{ after(grammarAccess.getIntervalLiteralAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getIntervalLiteralAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntervalLiteral__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group_5__0__Impl
	rule__IntervalLiteral__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getStepKeyword_5_0()); }
	'step'
	{ after(grammarAccess.getIntervalLiteralAccess().getStepKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntervalLiteral__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalLiteralAccess().getStepAssignment_5_1()); }
	(rule__IntervalLiteral__StepAssignment_5_1)
	{ after(grammarAccess.getIntervalLiteralAccess().getStepAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0__0__Impl
	rule__SetLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0__1__Impl
	rule__SetLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0__2__Impl
	rule__SetLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getLiteralAssignment_0_2()); }
	(rule__SetLiteral__LiteralAssignment_0_2)
	{ after(grammarAccess.getSetLiteralAccess().getLiteralAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0__3__Impl
	rule__SetLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getGroup_0_3()); }
	(rule__SetLiteral__Group_0_3__0)*
	{ after(grammarAccess.getSetLiteralAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0_3__0__Impl
	rule__SetLiteral__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getSetLiteralAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getLiteralAssignment_0_3_1()); }
	(rule__SetLiteral__LiteralAssignment_0_3_1)
	{ after(grammarAccess.getSetLiteralAccess().getLiteralAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_1__0__Impl
	rule__SetLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_1_1()); }
	'}'
	{ after(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0__0__Impl
	rule__ListLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getListLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getListLiteralAccess().getListLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0__1__Impl
	rule__ListLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0__2__Impl
	rule__ListLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getLiteralAssignment_0_2()); }
	(rule__ListLiteral__LiteralAssignment_0_2)
	{ after(grammarAccess.getListLiteralAccess().getLiteralAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0__3__Impl
	rule__ListLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getGroup_0_3()); }
	(rule__ListLiteral__Group_0_3__0)*
	{ after(grammarAccess.getListLiteralAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0_3__0__Impl
	rule__ListLiteral__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getListLiteralAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getLiteralAssignment_0_3_1()); }
	(rule__ListLiteral__LiteralAssignment_0_3_1)
	{ after(grammarAccess.getListLiteralAccess().getLiteralAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_1__0__Impl
	rule__ListLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0__0__Impl
	rule__BagLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getBagLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getBagLiteralAccess().getBagLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0__1__Impl
	rule__BagLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getLessThanSignKeyword_0_1()); }
	'<'
	{ after(grammarAccess.getBagLiteralAccess().getLessThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0__2__Impl
	rule__BagLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getLiteralAssignment_0_2()); }
	(rule__BagLiteral__LiteralAssignment_0_2)
	{ after(grammarAccess.getBagLiteralAccess().getLiteralAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0__3__Impl
	rule__BagLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getGroup_0_3()); }
	(rule__BagLiteral__Group_0_3__0)*
	{ after(grammarAccess.getBagLiteralAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getGreaterThanSignKeyword_0_4()); }
	'>'
	{ after(grammarAccess.getBagLiteralAccess().getGreaterThanSignKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagLiteral__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0_3__0__Impl
	rule__BagLiteral__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getBagLiteralAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getLiteralAssignment_0_3_1()); }
	(rule__BagLiteral__LiteralAssignment_0_3_1)
	{ after(grammarAccess.getBagLiteralAccess().getLiteralAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_1__0__Impl
	rule__BagLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getLessThanSignKeyword_1_0()); }
	'<'
	{ after(grammarAccess.getBagLiteralAccess().getLessThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagLiteralAccess().getGreaterThanSignKeyword_1_1()); }
	'>'
	{ after(grammarAccess.getBagLiteralAccess().getGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0__0__Impl
	rule__MapLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getMapLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getMapLiteralAccess().getMapLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0__1__Impl
	rule__MapLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0__2__Impl
	rule__MapLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getGroup_0_2()); }
	(rule__MapLiteral__Group_0_2__0)
	{ after(grammarAccess.getMapLiteralAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0__3__Impl
	rule__MapLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getGroup_0_3()); }
	(rule__MapLiteral__Group_0_3__0)*
	{ after(grammarAccess.getMapLiteralAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_2__0__Impl
	rule__MapLiteral__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_2_0()); }
	(rule__MapLiteral__LiteralAssignment_0_2_0)
	{ after(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_2__1__Impl
	rule__MapLiteral__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_0_2_1()); }
	'->'
	{ after(grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_2_2()); }
	(rule__MapLiteral__LiteralAssignment_0_2_2)
	{ after(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_3__0__Impl
	rule__MapLiteral__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getMapLiteralAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_3__1__Impl
	rule__MapLiteral__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_3_1()); }
	(rule__MapLiteral__LiteralAssignment_0_3_1)
	{ after(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_3__2__Impl
	rule__MapLiteral__Group_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_0_3_2()); }
	'->'
	{ after(grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_0_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_3_3()); }
	(rule__MapLiteral__LiteralAssignment_0_3_3)
	{ after(grammarAccess.getMapLiteralAccess().getLiteralAssignment_0_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_1__0__Impl
	rule__MapLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_1__1__Impl
	rule__MapLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getMapLiteralAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__0__Impl
	rule__ForAllTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getForAllTermAction_0()); }
	()
	{ after(grammarAccess.getForAllTermAccess().getForAllTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__1__Impl
	rule__ForAllTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getForallKeyword_1()); }
	'forall'
	{ after(grammarAccess.getForAllTermAccess().getForallKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__2__Impl
	rule__ForAllTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getVarTermAssignment_2()); }
	(rule__ForAllTerm__VarTermAssignment_2)
	{ after(grammarAccess.getForAllTermAccess().getVarTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__3__Impl
	rule__ForAllTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getForAllTermAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__4__Impl
	rule__ForAllTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getInTermAssignment_4()); }
	(rule__ForAllTerm__InTermAssignment_4)
	{ after(grammarAccess.getForAllTermAccess().getInTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__5__Impl
	rule__ForAllTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getGroup_5()); }
	(rule__ForAllTerm__Group_5__0)*
	{ after(grammarAccess.getForAllTermAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__6__Impl
	rule__ForAllTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getHoldsKeyword_6()); }
	'holds'
	{ after(grammarAccess.getForAllTermAccess().getHoldsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getWithTermAssignment_7()); }
	(rule__ForAllTerm__WithTermAssignment_7)
	{ after(grammarAccess.getForAllTermAccess().getWithTermAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllTerm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group_5__0__Impl
	rule__ForAllTerm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getForAllTermAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group_5__1__Impl
	rule__ForAllTerm__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getVarTermAssignment_5_1()); }
	(rule__ForAllTerm__VarTermAssignment_5_1)
	{ after(grammarAccess.getForAllTermAccess().getVarTermAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group_5__2__Impl
	rule__ForAllTerm__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getInKeyword_5_2()); }
	'in'
	{ after(grammarAccess.getForAllTermAccess().getInKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForAllTerm__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAllTermAccess().getInTermAssignment_5_3()); }
	(rule__ForAllTerm__InTermAssignment_5_3)
	{ after(grammarAccess.getForAllTermAccess().getInTermAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__0__Impl
	rule__ExistsTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getExistsTermAction_0()); }
	()
	{ after(grammarAccess.getExistsTermAccess().getExistsTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__1__Impl
	rule__ExistsTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getExistsKeyword_1()); }
	'exists'
	{ after(grammarAccess.getExistsTermAccess().getExistsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__2__Impl
	rule__ExistsTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getUniqueAssignment_2()); }
	(rule__ExistsTerm__UniqueAssignment_2)?
	{ after(grammarAccess.getExistsTermAccess().getUniqueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__3__Impl
	rule__ExistsTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getVarTermAssignment_3()); }
	(rule__ExistsTerm__VarTermAssignment_3)
	{ after(grammarAccess.getExistsTermAccess().getVarTermAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__4__Impl
	rule__ExistsTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getInKeyword_4()); }
	'in'
	{ after(grammarAccess.getExistsTermAccess().getInKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__5__Impl
	rule__ExistsTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getInTermAssignment_5()); }
	(rule__ExistsTerm__InTermAssignment_5)
	{ after(grammarAccess.getExistsTermAccess().getInTermAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__6__Impl
	rule__ExistsTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getGroup_6()); }
	(rule__ExistsTerm__Group_6__0)*
	{ after(grammarAccess.getExistsTermAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__7__Impl
	rule__ExistsTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getWithKeyword_7()); }
	'with'
	{ after(grammarAccess.getExistsTermAccess().getWithKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getWithTermAssignment_8()); }
	(rule__ExistsTerm__WithTermAssignment_8)
	{ after(grammarAccess.getExistsTermAccess().getWithTermAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTerm__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group_6__0__Impl
	rule__ExistsTerm__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getExistsTermAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group_6__1__Impl
	rule__ExistsTerm__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getVarTermAssignment_6_1()); }
	(rule__ExistsTerm__VarTermAssignment_6_1)
	{ after(grammarAccess.getExistsTermAccess().getVarTermAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group_6__2__Impl
	rule__ExistsTerm__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getInKeyword_6_2()); }
	'in'
	{ after(grammarAccess.getExistsTermAccess().getInKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsTerm__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsTermAccess().getInTermAssignment_6_3()); }
	(rule__ExistsTerm__InTermAssignment_6_3)
	{ after(grammarAccess.getExistsTermAccess().getInTermAssignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SizeOfEnumerableTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SizeOfEnumerableTerm__Group__0__Impl
	rule__SizeOfEnumerableTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeOfEnumerableTermAccess().getSizeOfEnumerableTermAction_0()); }
	()
	{ after(grammarAccess.getSizeOfEnumerableTermAccess().getSizeOfEnumerableTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SizeOfEnumerableTerm__Group__1__Impl
	rule__SizeOfEnumerableTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeOfEnumerableTermAccess().getVerticalLineKeyword_1()); }
	'|'
	{ after(grammarAccess.getSizeOfEnumerableTermAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SizeOfEnumerableTerm__Group__2__Impl
	rule__SizeOfEnumerableTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeOfEnumerableTermAccess().getEnumTermAssignment_2()); }
	(rule__SizeOfEnumerableTerm__EnumTermAssignment_2)
	{ after(grammarAccess.getSizeOfEnumerableTermAccess().getEnumTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SizeOfEnumerableTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeOfEnumerableTermAccess().getVerticalLineKeyword_3()); }
	'|'
	{ after(grammarAccess.getSizeOfEnumerableTermAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PickTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group__0__Impl
	rule__PickTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getPickKeyword_0()); }
	'pick'
	{ after(grammarAccess.getPickTermAccess().getPickKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group__1__Impl
	rule__PickTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getVarTermAssignment_1()); }
	(rule__PickTerm__VarTermAssignment_1)
	{ after(grammarAccess.getPickTermAccess().getVarTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group__2__Impl
	rule__PickTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getPickTermAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group__3__Impl
	rule__PickTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getEnumTermAssignment_3()); }
	(rule__PickTerm__EnumTermAssignment_3)
	{ after(grammarAccess.getPickTermAccess().getEnumTermAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getGroup_4()); }
	(rule__PickTerm__Group_4__0)?
	{ after(grammarAccess.getPickTermAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PickTerm__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group_4__0__Impl
	rule__PickTerm__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getWithKeyword_4_0()); }
	'with'
	{ after(grammarAccess.getPickTermAccess().getWithKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PickTerm__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPickTermAccess().getTermAssignment_4_1()); }
	(rule__PickTerm__TermAssignment_4_1)
	{ after(grammarAccess.getPickTermAccess().getTermAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__0__Impl
	rule__ConditionalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalTermAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__1__Impl
	rule__ConditionalTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getCondAssignment_1()); }
	(rule__ConditionalTerm__CondAssignment_1)
	{ after(grammarAccess.getConditionalTermAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__2__Impl
	rule__ConditionalTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getConditionalTermAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__3__Impl
	rule__ConditionalTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getThenTermAssignment_3()); }
	(rule__ConditionalTerm__ThenTermAssignment_3)
	{ after(grammarAccess.getConditionalTermAccess().getThenTermAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__4__Impl
	rule__ConditionalTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getConditionalTermAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__5__Impl
	rule__ConditionalTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getElseTermAssignment_5()); }
	(rule__ConditionalTerm__ElseTermAssignment_5)
	{ after(grammarAccess.getConditionalTermAccess().getElseTermAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getEndifKeyword_6()); }
	('endif')?
	{ after(grammarAccess.getConditionalTermAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__0__Impl
	rule__CaseTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getCaseTermAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__1__Impl
	rule__CaseTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getCaseTermAssignment_1()); }
	(rule__CaseTerm__CaseTermAssignment_1)
	{ after(grammarAccess.getCaseTermAccess().getCaseTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__2__Impl
	rule__CaseTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getCaseTermAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__3__Impl
	rule__CaseTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCaseTermAccess().getGroup_3()); }
		(rule__CaseTerm__Group_3__0)
		{ after(grammarAccess.getCaseTermAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getCaseTermAccess().getGroup_3()); }
		(rule__CaseTerm__Group_3__0)*
		{ after(grammarAccess.getCaseTermAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__4__Impl
	rule__CaseTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getGroup_4()); }
	(rule__CaseTerm__Group_4__0)?
	{ after(grammarAccess.getCaseTermAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getEndcaseKeyword_5()); }
	'endcase'
	{ after(grammarAccess.getCaseTermAccess().getEndcaseKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseTerm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_3__0__Impl
	rule__CaseTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getTermAssignment_3_0()); }
	(rule__CaseTerm__TermAssignment_3_0)
	{ after(grammarAccess.getCaseTermAccess().getTermAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_3__1__Impl
	rule__CaseTerm__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getCaseTermAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getTermActionAssignment_3_2()); }
	(rule__CaseTerm__TermActionAssignment_3_2)
	{ after(grammarAccess.getCaseTermAccess().getTermActionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseTerm__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_4__0__Impl
	rule__CaseTerm__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getOtherwiseKeyword_4_0()); }
	'otherwise'
	{ after(grammarAccess.getCaseTermAccess().getOtherwiseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getOtherwiseTermAssignment_4_1()); }
	(rule__CaseTerm__OtherwiseTermAssignment_4_1)
	{ after(grammarAccess.getCaseTermAccess().getOtherwiseTermAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__0__Impl
	rule__LetTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getLetTermAction_0()); }
	()
	{ after(grammarAccess.getLetTermAccess().getLetTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__1__Impl
	rule__LetTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getLetKeyword_1()); }
	'let'
	{ after(grammarAccess.getLetTermAccess().getLetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__2__Impl
	rule__LetTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getVarTermAssignment_2()); }
	(rule__LetTerm__VarTermAssignment_2)
	{ after(grammarAccess.getLetTermAccess().getVarTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__3__Impl
	rule__LetTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getLetTermAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__4__Impl
	rule__LetTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getTermAssignment_4()); }
	(rule__LetTerm__TermAssignment_4)
	{ after(grammarAccess.getLetTermAccess().getTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__5__Impl
	rule__LetTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getGroup_5()); }
	(rule__LetTerm__Group_5__0)*
	{ after(grammarAccess.getLetTermAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__6__Impl
	rule__LetTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getInKeyword_6()); }
	'in'
	{ after(grammarAccess.getLetTermAccess().getInKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getBodyAssignment_7()); }
	(rule__LetTerm__BodyAssignment_7)
	{ after(grammarAccess.getLetTermAccess().getBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetTerm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__0__Impl
	rule__LetTerm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getLetTermAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__1__Impl
	rule__LetTerm__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getVarTermAssignment_5_1()); }
	(rule__LetTerm__VarTermAssignment_5_1)
	{ after(grammarAccess.getLetTermAccess().getVarTermAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__2__Impl
	rule__LetTerm__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getTermAssignment_5_3()); }
	(rule__LetTerm__TermAssignment_5_3)
	{ after(grammarAccess.getLetTermAccess().getTermAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleAsTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__0__Impl
	rule__RuleAsTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getRuleAsTermAction_0()); }
	()
	{ after(grammarAccess.getRuleAsTermAccess().getRuleAsTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__1__Impl
	rule__RuleAsTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getRuleAsTermAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getRuleAssignment_2()); }
	(rule__RuleAsTerm__RuleAssignment_2)
	{ after(grammarAccess.getRuleAsTermAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnTerm__Group__0__Impl
	rule__ReturnTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnTermAccess().getReturnTermAction_0()); }
	()
	{ after(grammarAccess.getReturnTermAccess().getReturnTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnTerm__Group__1__Impl
	rule__ReturnTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnTermAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnTermAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnTerm__Group__2__Impl
	rule__ReturnTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnTermAccess().getTermAssignment_2()); }
	(rule__ReturnTerm__TermAssignment_2)
	{ after(grammarAccess.getReturnTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnTermAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getReturnTermAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetComprehensionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__0__Impl
	rule__SetComprehensionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getSetComprehensionTermAction_0()); }
	()
	{ after(grammarAccess.getSetComprehensionTermAccess().getSetComprehensionTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__1__Impl
	rule__SetComprehensionTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSetComprehensionTermAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__2__Impl
	rule__SetComprehensionTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getTermAssignment_2()); }
	(rule__SetComprehensionTerm__TermAssignment_2)
	{ after(grammarAccess.getSetComprehensionTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__3__Impl
	rule__SetComprehensionTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getVerticalLineKeyword_3()); }
	'|'
	{ after(grammarAccess.getSetComprehensionTermAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__4__Impl
	rule__SetComprehensionTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getVarTermAssignment_4()); }
	(rule__SetComprehensionTerm__VarTermAssignment_4)
	{ after(grammarAccess.getSetComprehensionTermAccess().getVarTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__5__Impl
	rule__SetComprehensionTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getSetComprehensionTermAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__6__Impl
	rule__SetComprehensionTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getEnumTermAssignment_6()); }
	(rule__SetComprehensionTerm__EnumTermAssignment_6)
	{ after(grammarAccess.getSetComprehensionTermAccess().getEnumTermAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__7__Impl
	rule__SetComprehensionTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getGroup_7()); }
	(rule__SetComprehensionTerm__Group_7__0)*
	{ after(grammarAccess.getSetComprehensionTermAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__8__Impl
	rule__SetComprehensionTerm__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getGroup_8()); }
	(rule__SetComprehensionTerm__Group_8__0)?
	{ after(grammarAccess.getSetComprehensionTermAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getSetComprehensionTermAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetComprehensionTerm__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group_7__0__Impl
	rule__SetComprehensionTerm__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getSetComprehensionTermAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group_7__1__Impl
	rule__SetComprehensionTerm__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getVarTermAssignment_7_1()); }
	(rule__SetComprehensionTerm__VarTermAssignment_7_1)
	{ after(grammarAccess.getSetComprehensionTermAccess().getVarTermAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group_7__2__Impl
	rule__SetComprehensionTerm__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getInKeyword_7_2()); }
	'in'
	{ after(grammarAccess.getSetComprehensionTermAccess().getInKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getEnumTermAssignment_7_3()); }
	(rule__SetComprehensionTerm__EnumTermAssignment_7_3)
	{ after(grammarAccess.getSetComprehensionTermAccess().getEnumTermAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetComprehensionTerm__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group_8__0__Impl
	rule__SetComprehensionTerm__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getWithKeyword_8_0()); }
	'with'
	{ after(grammarAccess.getSetComprehensionTermAccess().getWithKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetComprehensionTerm__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetComprehensionTermAccess().getTermWithAssignment_8_1()); }
	(rule__SetComprehensionTerm__TermWithAssignment_8_1)
	{ after(grammarAccess.getSetComprehensionTermAccess().getTermWithAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehensionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__0__Impl
	rule__ListComprehensionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getListComprehensionTermAction_0()); }
	()
	{ after(grammarAccess.getListComprehensionTermAccess().getListComprehensionTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__1__Impl
	rule__ListComprehensionTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getListComprehensionTermAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__2__Impl
	rule__ListComprehensionTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getTermAssignment_2()); }
	(rule__ListComprehensionTerm__TermAssignment_2)
	{ after(grammarAccess.getListComprehensionTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__3__Impl
	rule__ListComprehensionTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getVerticalLineKeyword_3()); }
	'|'
	{ after(grammarAccess.getListComprehensionTermAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__4__Impl
	rule__ListComprehensionTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getVarTermAssignment_4()); }
	(rule__ListComprehensionTerm__VarTermAssignment_4)
	{ after(grammarAccess.getListComprehensionTermAccess().getVarTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__5__Impl
	rule__ListComprehensionTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getListComprehensionTermAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__6__Impl
	rule__ListComprehensionTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getEnumTermAssignment_6()); }
	(rule__ListComprehensionTerm__EnumTermAssignment_6)
	{ after(grammarAccess.getListComprehensionTermAccess().getEnumTermAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__7__Impl
	rule__ListComprehensionTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getGroup_7()); }
	(rule__ListComprehensionTerm__Group_7__0)*
	{ after(grammarAccess.getListComprehensionTermAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__8__Impl
	rule__ListComprehensionTerm__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getGroup_8()); }
	(rule__ListComprehensionTerm__Group_8__0)?
	{ after(grammarAccess.getListComprehensionTermAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getRightSquareBracketKeyword_9()); }
	']'
	{ after(grammarAccess.getListComprehensionTermAccess().getRightSquareBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehensionTerm__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group_7__0__Impl
	rule__ListComprehensionTerm__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getListComprehensionTermAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group_7__1__Impl
	rule__ListComprehensionTerm__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getVarTermAssignment_7_1()); }
	(rule__ListComprehensionTerm__VarTermAssignment_7_1)
	{ after(grammarAccess.getListComprehensionTermAccess().getVarTermAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group_7__2__Impl
	rule__ListComprehensionTerm__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getInKeyword_7_2()); }
	'in'
	{ after(grammarAccess.getListComprehensionTermAccess().getInKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getEnumTermAssignment_7_3()); }
	(rule__ListComprehensionTerm__EnumTermAssignment_7_3)
	{ after(grammarAccess.getListComprehensionTermAccess().getEnumTermAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehensionTerm__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group_8__0__Impl
	rule__ListComprehensionTerm__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getWithKeyword_8_0()); }
	'with'
	{ after(grammarAccess.getListComprehensionTermAccess().getWithKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListComprehensionTerm__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListComprehensionTermAccess().getTermWithAssignment_8_1()); }
	(rule__ListComprehensionTerm__TermWithAssignment_8_1)
	{ after(grammarAccess.getListComprehensionTermAccess().getTermWithAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagComprehensionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__0__Impl
	rule__BagComprehensionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getBagComprehensionTermAction_0()); }
	()
	{ after(grammarAccess.getBagComprehensionTermAccess().getBagComprehensionTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__1__Impl
	rule__BagComprehensionTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getBagComprehensionTermAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__2__Impl
	rule__BagComprehensionTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getTermAssignment_2()); }
	(rule__BagComprehensionTerm__TermAssignment_2)
	{ after(grammarAccess.getBagComprehensionTermAccess().getTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__3__Impl
	rule__BagComprehensionTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getVerticalLineKeyword_3()); }
	'|'
	{ after(grammarAccess.getBagComprehensionTermAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__4__Impl
	rule__BagComprehensionTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getVarTermAssignment_4()); }
	(rule__BagComprehensionTerm__VarTermAssignment_4)
	{ after(grammarAccess.getBagComprehensionTermAccess().getVarTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__5__Impl
	rule__BagComprehensionTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getBagComprehensionTermAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__6__Impl
	rule__BagComprehensionTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getEnumTermAssignment_6()); }
	(rule__BagComprehensionTerm__EnumTermAssignment_6)
	{ after(grammarAccess.getBagComprehensionTermAccess().getEnumTermAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__7__Impl
	rule__BagComprehensionTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getGroup_7()); }
	(rule__BagComprehensionTerm__Group_7__0)*
	{ after(grammarAccess.getBagComprehensionTermAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__8__Impl
	rule__BagComprehensionTerm__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getGroup_8()); }
	(rule__BagComprehensionTerm__Group_8__0)?
	{ after(grammarAccess.getBagComprehensionTermAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getGreaterThanSignKeyword_9()); }
	'>'
	{ after(grammarAccess.getBagComprehensionTermAccess().getGreaterThanSignKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagComprehensionTerm__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group_7__0__Impl
	rule__BagComprehensionTerm__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getBagComprehensionTermAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group_7__1__Impl
	rule__BagComprehensionTerm__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getVarTermAssignment_7_1()); }
	(rule__BagComprehensionTerm__VarTermAssignment_7_1)
	{ after(grammarAccess.getBagComprehensionTermAccess().getVarTermAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group_7__2__Impl
	rule__BagComprehensionTerm__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getInKeyword_7_2()); }
	'in'
	{ after(grammarAccess.getBagComprehensionTermAccess().getInKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getEnumTermAssignment_7_3()); }
	(rule__BagComprehensionTerm__EnumTermAssignment_7_3)
	{ after(grammarAccess.getBagComprehensionTermAccess().getEnumTermAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagComprehensionTerm__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group_8__0__Impl
	rule__BagComprehensionTerm__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getWithKeyword_8_0()); }
	'with'
	{ after(grammarAccess.getBagComprehensionTermAccess().getWithKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagComprehensionTerm__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagComprehensionTermAccess().getTermWithAssignment_8_1()); }
	(rule__BagComprehensionTerm__TermWithAssignment_8_1)
	{ after(grammarAccess.getBagComprehensionTermAccess().getTermWithAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapComprehensionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__0__Impl
	rule__MapComprehensionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getMapComprehensionTermAction_0()); }
	()
	{ after(grammarAccess.getMapComprehensionTermAccess().getMapComprehensionTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__1__Impl
	rule__MapComprehensionTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMapComprehensionTermAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__2__Impl
	rule__MapComprehensionTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getTerm1Assignment_2()); }
	(rule__MapComprehensionTerm__Term1Assignment_2)
	{ after(grammarAccess.getMapComprehensionTermAccess().getTerm1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__3__Impl
	rule__MapComprehensionTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getMapComprehensionTermAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__4__Impl
	rule__MapComprehensionTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getTerm2Assignment_4()); }
	(rule__MapComprehensionTerm__Term2Assignment_4)
	{ after(grammarAccess.getMapComprehensionTermAccess().getTerm2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__5__Impl
	rule__MapComprehensionTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getVerticalLineKeyword_5()); }
	'|'
	{ after(grammarAccess.getMapComprehensionTermAccess().getVerticalLineKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__6__Impl
	rule__MapComprehensionTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getVarTermAssignment_6()); }
	(rule__MapComprehensionTerm__VarTermAssignment_6)
	{ after(grammarAccess.getMapComprehensionTermAccess().getVarTermAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__7__Impl
	rule__MapComprehensionTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getInKeyword_7()); }
	'in'
	{ after(grammarAccess.getMapComprehensionTermAccess().getInKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__8__Impl
	rule__MapComprehensionTerm__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getEnumTermAssignment_8()); }
	(rule__MapComprehensionTerm__EnumTermAssignment_8)
	{ after(grammarAccess.getMapComprehensionTermAccess().getEnumTermAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__9__Impl
	rule__MapComprehensionTerm__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getGroup_9()); }
	(rule__MapComprehensionTerm__Group_9__0)*
	{ after(grammarAccess.getMapComprehensionTermAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__10__Impl
	rule__MapComprehensionTerm__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getGroup_10()); }
	(rule__MapComprehensionTerm__Group_10__0)?
	{ after(grammarAccess.getMapComprehensionTermAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getMapComprehensionTermAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapComprehensionTerm__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group_9__0__Impl
	rule__MapComprehensionTerm__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getMapComprehensionTermAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group_9__1__Impl
	rule__MapComprehensionTerm__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getVarTermAssignment_9_1()); }
	(rule__MapComprehensionTerm__VarTermAssignment_9_1)
	{ after(grammarAccess.getMapComprehensionTermAccess().getVarTermAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group_9__2__Impl
	rule__MapComprehensionTerm__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getInKeyword_9_2()); }
	'in'
	{ after(grammarAccess.getMapComprehensionTermAccess().getInKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getEnumTermAssignment_9_3()); }
	(rule__MapComprehensionTerm__EnumTermAssignment_9_3)
	{ after(grammarAccess.getMapComprehensionTermAccess().getEnumTermAssignment_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapComprehensionTerm__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group_10__0__Impl
	rule__MapComprehensionTerm__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getWithKeyword_10_0()); }
	'with'
	{ after(grammarAccess.getMapComprehensionTermAccess().getWithKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapComprehensionTerm__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapComprehensionTermAccess().getTermWithAssignment_10_1()); }
	(rule__MapComprehensionTerm__TermWithAssignment_10_1)
	{ after(grammarAccess.getMapComprehensionTermAccess().getTermWithAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberRangeTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__0__Impl
	rule__NumberRangeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getNumberRangeTermAction_0()); }
	()
	{ after(grammarAccess.getNumberRangeTermAccess().getNumberRangeTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__1__Impl
	rule__NumberRangeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getNumberRangeTermAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__2__Impl
	rule__NumberRangeTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getStartAssignment_2()); }
	(rule__NumberRangeTerm__StartAssignment_2)
	{ after(grammarAccess.getNumberRangeTermAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__3__Impl
	rule__NumberRangeTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getFullStopFullStopKeyword_3()); }
	'..'
	{ after(grammarAccess.getNumberRangeTermAccess().getFullStopFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__4__Impl
	rule__NumberRangeTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getEndAssignment_4()); }
	(rule__NumberRangeTerm__EndAssignment_4)
	{ after(grammarAccess.getNumberRangeTermAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__5__Impl
	rule__NumberRangeTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getGroup_5()); }
	(rule__NumberRangeTerm__Group_5__0)?
	{ after(grammarAccess.getNumberRangeTermAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getNumberRangeTermAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberRangeTerm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group_5__0__Impl
	rule__NumberRangeTerm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getStepKeyword_5_0()); }
	'step'
	{ after(grammarAccess.getNumberRangeTermAccess().getStepKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberRangeTerm__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberRangeTermAccess().getStepAssignment_5_1()); }
	(rule__NumberRangeTerm__StepAssignment_5_1)
	{ after(grammarAccess.getNumberRangeTermAccess().getStepAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0__0__Impl
	rule__SetTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getSetTermAction_0_0()); }
	()
	{ after(grammarAccess.getSetTermAccess().getSetTermAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0__1__Impl
	rule__SetTerm__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0__2__Impl
	rule__SetTerm__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getTermAssignment_0_2()); }
	(rule__SetTerm__TermAssignment_0_2)
	{ after(grammarAccess.getSetTermAccess().getTermAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0__3__Impl
	rule__SetTerm__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getGroup_0_3()); }
	(rule__SetTerm__Group_0_3__0)*
	{ after(grammarAccess.getSetTermAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0_3__0__Impl
	rule__SetTerm__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getSetTermAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getTermAssignment_0_3_1()); }
	(rule__SetTerm__TermAssignment_0_3_1)
	{ after(grammarAccess.getSetTermAccess().getTermAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_1__0__Impl
	rule__SetTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_1_1()); }
	'}'
	{ after(grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0__0__Impl
	rule__ListTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getListTermAction_0_0()); }
	()
	{ after(grammarAccess.getListTermAccess().getListTermAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0__1__Impl
	rule__ListTerm__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getListTermAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0__2__Impl
	rule__ListTerm__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getTermAssignment_0_2()); }
	(rule__ListTerm__TermAssignment_0_2)
	{ after(grammarAccess.getListTermAccess().getTermAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0__3__Impl
	rule__ListTerm__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getGroup_0_3()); }
	(rule__ListTerm__Group_0_3__0)*
	{ after(grammarAccess.getListTermAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getListTermAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0_3__0__Impl
	rule__ListTerm__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getListTermAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getTermAssignment_0_3_1()); }
	(rule__ListTerm__TermAssignment_0_3_1)
	{ after(grammarAccess.getListTermAccess().getTermAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_1__0__Impl
	rule__ListTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getListTermAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTermAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getListTermAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0__0__Impl
	rule__BagTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getBagTermAction_0_0()); }
	()
	{ after(grammarAccess.getBagTermAccess().getBagTermAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0__1__Impl
	rule__BagTerm__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getLessThanSignKeyword_0_1()); }
	'<'
	{ after(grammarAccess.getBagTermAccess().getLessThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0__2__Impl
	rule__BagTerm__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getTermAssignment_0_2()); }
	(rule__BagTerm__TermAssignment_0_2)
	{ after(grammarAccess.getBagTermAccess().getTermAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0__3__Impl
	rule__BagTerm__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getGroup_0_3()); }
	(rule__BagTerm__Group_0_3__0)*
	{ after(grammarAccess.getBagTermAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_0_4()); }
	'>'
	{ after(grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0_3__0__Impl
	rule__BagTerm__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getBagTermAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getTermAssignment_0_3_1()); }
	(rule__BagTerm__TermAssignment_0_3_1)
	{ after(grammarAccess.getBagTermAccess().getTermAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_1__0__Impl
	rule__BagTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getLessThanSignKeyword_1_0()); }
	'<'
	{ after(grammarAccess.getBagTermAccess().getLessThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_1_1()); }
	'>'
	{ after(grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0__0__Impl
	rule__MapTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getMapTermAction_0_0()); }
	()
	{ after(grammarAccess.getMapTermAccess().getMapTermAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0__1__Impl
	rule__MapTerm__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0__2__Impl
	rule__MapTerm__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getGroup_0_2()); }
	(rule__MapTerm__Group_0_2__0)
	{ after(grammarAccess.getMapTermAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0__3__Impl
	rule__MapTerm__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getGroup_0_3()); }
	(rule__MapTerm__Group_0_3__0)*
	{ after(grammarAccess.getMapTermAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_2__0__Impl
	rule__MapTerm__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_0_2_0()); }
	(rule__MapTerm__TermAssignment_0_2_0)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_2__1__Impl
	rule__MapTerm__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_0_2_1()); }
	'->'
	{ after(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_0_2_2()); }
	(rule__MapTerm__TermAssignment_0_2_2)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_3__0__Impl
	rule__MapTerm__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getMapTermAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_3__1__Impl
	rule__MapTerm__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_0_3_1()); }
	(rule__MapTerm__TermAssignment_0_3_1)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_3__2__Impl
	rule__MapTerm__Group_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_0_3_2()); }
	'->'
	{ after(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_0_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_0_3_3()); }
	(rule__MapTerm__TermAssignment_0_3_3)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_0_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_1__0__Impl
	rule__MapTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_1__1__Impl
	rule__MapTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
	()
	{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getTextAssignment_1()); }
	(rule__StringLiteral__TextAssignment_1)
	{ after(grammarAccess.getStringLiteralAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharLiteral__Group__0__Impl
	rule__CharLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharLiteralAccess().getCharLiteralAction_0()); }
	()
	{ after(grammarAccess.getCharLiteralAccess().getCharLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharLiteralAccess().getTextAssignment_1()); }
	(rule__CharLiteral__TextAssignment_1)
	{ after(grammarAccess.getCharLiteralAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_0__0__Impl
	rule__StructuredDomain__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getStructuredDomainAction_0_0()); }
	()
	{ after(grammarAccess.getStructuredDomainAccess().getStructuredDomainAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_0__1__Impl
	rule__StructuredDomain__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getTypeAssignment_0_1()); }
	(rule__StructuredDomain__TypeAssignment_0_1)
	{ after(grammarAccess.getStructuredDomainAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getGroup_0_2()); }
	(rule__StructuredDomain__Group_0_2__0)?
	{ after(grammarAccess.getStructuredDomainAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_0_2__0__Impl
	rule__StructuredDomain__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_0_2_0()); }
	'('
	{ after(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_0_2__1__Impl
	rule__StructuredDomain__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getDomainSetAssignment_0_2_1()); }
	(rule__StructuredDomain__DomainSetAssignment_0_2_1)
	{ after(grammarAccess.getStructuredDomainAccess().getDomainSetAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_0_2_2()); }
	')'
	{ after(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_1__0__Impl
	rule__StructuredDomain__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getTypeAssignment_1_0()); }
	(rule__StructuredDomain__TypeAssignment_1_0)
	{ after(grammarAccess.getStructuredDomainAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getGroup_1_1()); }
	(rule__StructuredDomain__Group_1_1__0)?
	{ after(grammarAccess.getStructuredDomainAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_1_1__0__Impl
	rule__StructuredDomain__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_1_1__1__Impl
	rule__StructuredDomain__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getDomainBagAssignment_1_1_1()); }
	(rule__StructuredDomain__DomainBagAssignment_1_1_1)
	{ after(grammarAccess.getStructuredDomainAccess().getDomainBagAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_2__0__Impl
	rule__StructuredDomain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getTypeAssignment_2_0()); }
	(rule__StructuredDomain__TypeAssignment_2_0)
	{ after(grammarAccess.getStructuredDomainAccess().getTypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getGroup_2_1()); }
	(rule__StructuredDomain__Group_2_1__0)?
	{ after(grammarAccess.getStructuredDomainAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_2_1__0__Impl
	rule__StructuredDomain__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_2_1__1__Impl
	rule__StructuredDomain__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getDomainListAssignment_2_1_1()); }
	(rule__StructuredDomain__DomainListAssignment_2_1_1)
	{ after(grammarAccess.getStructuredDomainAccess().getDomainListAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3__0__Impl
	rule__StructuredDomain__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getTypeAssignment_3_0()); }
	(rule__StructuredDomain__TypeAssignment_3_0)
	{ after(grammarAccess.getStructuredDomainAccess().getTypeAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getGroup_3_1()); }
	(rule__StructuredDomain__Group_3_1__0)?
	{ after(grammarAccess.getStructuredDomainAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredDomain__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3_1__0__Impl
	rule__StructuredDomain__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_3_1_0()); }
	'('
	{ after(grammarAccess.getStructuredDomainAccess().getLeftParenthesisKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3_1__1__Impl
	rule__StructuredDomain__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getDomainMapAssignment_3_1_1()); }
	(rule__StructuredDomain__DomainMapAssignment_3_1_1)
	{ after(grammarAccess.getStructuredDomainAccess().getDomainMapAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3_1__2__Impl
	rule__StructuredDomain__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getCommaKeyword_3_1_2()); }
	','
	{ after(grammarAccess.getStructuredDomainAccess().getCommaKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3_1__3__Impl
	rule__StructuredDomain__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getDomainMapAssignment_3_1_3()); }
	(rule__StructuredDomain__DomainMapAssignment_3_1_3)
	{ after(grammarAccess.getStructuredDomainAccess().getDomainMapAssignment_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredDomain__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_3_1_4()); }
	')'
	{ after(grammarAccess.getStructuredDomainAccess().getRightParenthesisKeyword_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendableDomain__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendableDomain__Group_0__0__Impl
	rule__ExtendableDomain__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendableDomainAccess().getExtendableDomainAction_0_0()); }
	()
	{ after(grammarAccess.getExtendableDomainAccess().getExtendableDomainAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendableDomain__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendableDomainAccess().getTypeAssignment_0_1()); }
	(rule__ExtendableDomain__TypeAssignment_0_1)
	{ after(grammarAccess.getExtendableDomainAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicDomain__Group__0__Impl
	rule__BasicDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicDomainAccess().getBasicDomainAction_0()); }
	()
	{ after(grammarAccess.getBasicDomainAccess().getBasicDomainAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicDomain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicDomainAccess().getTypeBasicDomAssignment_1()); }
	(rule__BasicDomain__TypeBasicDomAssignment_1)
	{ after(grammarAccess.getBasicDomainAccess().getTypeBasicDomAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberLiteral__Group_0__0__Impl
	rule__NumberLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_0_1()); }
	(rule__NumberLiteral__ValueAssignment_0_1)
	{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group__0__Impl
	rule__TupleLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getTupleLiteralAction_0()); }
	()
	{ after(grammarAccess.getTupleLiteralAccess().getTupleLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group__1__Impl
	rule__TupleLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTupleLiteralAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group__2__Impl
	rule__TupleLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getLiteralsAssignment_2()); }
	(rule__TupleLiteral__LiteralsAssignment_2)
	{ after(grammarAccess.getTupleLiteralAccess().getLiteralsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group__3__Impl
	rule__TupleLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getGroup_3()); }
	(rule__TupleLiteral__Group_3__0)*
	{ after(grammarAccess.getTupleLiteralAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTupleLiteralAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteral__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group_3__0__Impl
	rule__TupleLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTupleLiteralAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralAccess().getLiteralsAssignment_3_1()); }
	(rule__TupleLiteral__LiteralsAssignment_3_1)
	{ after(grammarAccess.getTupleLiteralAccess().getLiteralsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondTernaryExpression__ThenAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondTernaryExpressionAccess().getThenImpliesExpressionParserRuleCall_1_2_0()); }
		ruleImpliesExpression
		{ after(grammarAccess.getCondTernaryExpressionAccess().getThenImpliesExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondTernaryExpression__ElseAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondTernaryExpressionAccess().getElseImpliesExpressionParserRuleCall_1_4_0()); }
		ruleImpliesExpression
		{ after(grammarAccess.getCondTernaryExpressionAccess().getElseImpliesExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getOpImpliesKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getImpliesExpressionAccess().getOpImpliesKeyword_1_1_0()); }
			'implies'
			{ after(grammarAccess.getImpliesExpressionAccess().getOpImpliesKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getImpliesExpressionAccess().getOpImpliesKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
		ruleOrExpression
		{ after(grammarAccess.getImpliesExpressionAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
			'or'
			{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getOrExpressionAccess().getOpOrKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
		ruleXorExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getOpXorKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getXorExpressionAccess().getOpXorKeyword_1_1_0()); }
			'xor'
			{ after(grammarAccess.getXorExpressionAccess().getOpXorKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getXorExpressionAccess().getOpXorKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
			'and'
			{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__EqualityExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightRelationExpressionParserRuleCall_1_2_0()); }
		ruleRelationExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightRelationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__RelationExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getRelationExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationExpressionAccess().getRightAddExpressionParserRuleCall_1_2_0()); }
		ruleAddExpression
		{ after(grammarAccess.getRelationExpressionAccess().getRightAddExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__AddExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAddExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getRightMultExpressionParserRuleCall_1_2_0()); }
		ruleMultExpression
		{ after(grammarAccess.getAddExpressionAccess().getRightMultExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__MultExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMultExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExpressionAccess().getRightPowerExpressionParserRuleCall_1_2_0()); }
		rulePowerExpression
		{ after(grammarAccess.getMultExpressionAccess().getRightPowerExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_1_0()); }
			'^'
			{ after(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_1_0()); }
			'not'
			{ after(grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExpressionBasicExpressionParserRuleCall_0_2_0()); }
		ruleBasicExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getExpressionBasicExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0()); }
			'-'
			{ after(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExpressionBasicExpressionParserRuleCall_1_2_0()); }
		ruleBasicExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getExpressionBasicExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTermAccess().getTermTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getTupleTermAccess().getTermTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__TermAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTermAccess().getTermTermParserRuleCall_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getTupleTermAccess().getTermTermParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getFunctionIdFunctionParserRuleCall_1_0()); }
		ruleIdFunction
		{ after(grammarAccess.getFunctionTermAccess().getFunctionIdFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__ArgsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getArgsTermParserRuleCall_2_0_1_0()); }
		ruleTerm
		{ after(grammarAccess.getFunctionTermAccess().getArgsTermParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__ArgsTupleAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getArgsTupleTupleTermParserRuleCall_2_1_0()); }
		ruleTupleTerm
		{ after(grammarAccess.getFunctionTermAccess().getArgsTupleTupleTermParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerableTerm__DomAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerableTermAccess().getDomDomainParserRuleCall_1_0()); }
		ruleDomain
		{ after(grammarAccess.getEnumerableTermAccess().getDomDomainParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__FunctionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationTermAccess().getFunctionFunctionTermParserRuleCall_0_1_0()); }
		ruleFunctionTerm
		{ after(grammarAccess.getLocationTermAccess().getFunctionFunctionTermParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationTermAccess().getResultResultKeyword_1_0()); }
		(
			{ before(grammarAccess.getLocationTermAccess().getResultResultKeyword_1_0()); }
			'result'
			{ after(grammarAccess.getLocationTermAccess().getResultResultKeyword_1_0()); }
		)
		{ after(grammarAccess.getLocationTermAccess().getResultResultKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_1_0()); }
			'true'
			{ after(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0()); }
			'false'
			{ after(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KernelLiteral__ValAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKernelLiteralAccess().getValUndefKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getKernelLiteralAccess().getValUndefKeyword_0_1_0()); }
			'undef'
			{ after(grammarAccess.getKernelLiteralAccess().getValUndefKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getKernelLiteralAccess().getValUndefKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KernelLiteral__ValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKernelLiteralAccess().getValSelfKeyword_1_0()); }
		(
			{ before(grammarAccess.getKernelLiteralAccess().getValSelfKeyword_1_0()); }
			'self'
			{ after(grammarAccess.getKernelLiteralAccess().getValSelfKeyword_1_0()); }
		)
		{ after(grammarAccess.getKernelLiteralAccess().getValSelfKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalLiteralAccess().getStartLiteralParserRuleCall_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getIntervalLiteralAccess().getStartLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalLiteralAccess().getEndLiteralParserRuleCall_4_0()); }
		ruleLiteral
		{ after(grammarAccess.getIntervalLiteralAccess().getEndLiteralParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntervalLiteral__StepAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalLiteralAccess().getStepLiteralParserRuleCall_5_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getIntervalLiteralAccess().getStepLiteralParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__LiteralAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__LiteralAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getSetLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__LiteralAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getListLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__LiteralAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getListLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__LiteralAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getBagLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagLiteral__LiteralAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getBagLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__LiteralAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__LiteralAssignment_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_2_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__LiteralAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__LiteralAssignment_0_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_3_3_0()); }
		ruleLiteral
		{ after(grammarAccess.getMapLiteralAccess().getLiteralLiteralParserRuleCall_0_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__VarTermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAllTermAccess().getVarTermVariableTermParserRuleCall_2_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getForAllTermAccess().getVarTermVariableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__InTermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAllTermAccess().getInTermTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getForAllTermAccess().getInTermTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__VarTermAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAllTermAccess().getVarTermVariableTermParserRuleCall_5_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getForAllTermAccess().getVarTermVariableTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__InTermAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAllTermAccess().getInTermTermParserRuleCall_5_3_0()); }
		ruleTerm
		{ after(grammarAccess.getForAllTermAccess().getInTermTermParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllTerm__WithTermAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAllTermAccess().getWithTermTermParserRuleCall_7_0()); }
		ruleTerm
		{ after(grammarAccess.getForAllTermAccess().getWithTermTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__UniqueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsTermAccess().getUniqueUniqueKeyword_2_0()); }
		(
			{ before(grammarAccess.getExistsTermAccess().getUniqueUniqueKeyword_2_0()); }
			'unique'
			{ after(grammarAccess.getExistsTermAccess().getUniqueUniqueKeyword_2_0()); }
		)
		{ after(grammarAccess.getExistsTermAccess().getUniqueUniqueKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__VarTermAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsTermAccess().getVarTermVariableTermParserRuleCall_3_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExistsTermAccess().getVarTermVariableTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__InTermAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsTermAccess().getInTermTermParserRuleCall_5_0()); }
		ruleTerm
		{ after(grammarAccess.getExistsTermAccess().getInTermTermParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__VarTermAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsTermAccess().getVarTermVariableTermParserRuleCall_6_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExistsTermAccess().getVarTermVariableTermParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__InTermAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsTermAccess().getInTermTermParserRuleCall_6_3_0()); }
		ruleTerm
		{ after(grammarAccess.getExistsTermAccess().getInTermTermParserRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTerm__WithTermAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsTermAccess().getWithTermTermParserRuleCall_8_0()); }
		ruleTerm
		{ after(grammarAccess.getExistsTermAccess().getWithTermTermParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOfEnumerableTerm__EnumTermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizeOfEnumerableTermAccess().getEnumTermEnumerableTermParserRuleCall_2_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getSizeOfEnumerableTermAccess().getEnumTermEnumerableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__VarTermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPickTermAccess().getVarTermVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getPickTermAccess().getVarTermVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__EnumTermAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPickTermAccess().getEnumTermEnumerableTermParserRuleCall_3_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getPickTermAccess().getEnumTermEnumerableTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PickTerm__TermAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPickTermAccess().getTermTermParserRuleCall_4_1_0()); }
		ruleTerm
		{ after(grammarAccess.getPickTermAccess().getTermTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getCondTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalTermAccess().getCondTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__ThenTermAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__ElseTermAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_5_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__CaseTermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getCaseTermTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getCaseTermTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__TermAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getTermTermParserRuleCall_3_0_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getTermTermParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__TermActionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getTermActionTermParserRuleCall_3_2_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getTermActionTermParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__OtherwiseTermAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_4_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__VarTermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getVarTermVariableTermParserRuleCall_2_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getLetTermAccess().getVarTermVariableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__TermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getTermTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getLetTermAccess().getTermTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__VarTermAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getVarTermVariableTermParserRuleCall_5_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getLetTermAccess().getVarTermVariableTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__TermAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getTermTermParserRuleCall_5_3_0()); }
		ruleTerm
		{ after(grammarAccess.getLetTermAccess().getTermTermParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__BodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_7_0()); }
		ruleTerm
		{ after(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAsTermAccess().getRuleIdRuleParserRuleCall_2_0()); }
		ruleIdRule
		{ after(grammarAccess.getRuleAsTermAccess().getRuleIdRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnTermAccess().getTermTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getReturnTermAccess().getTermTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getTermTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getSetComprehensionTermAccess().getTermTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__VarTermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getSetComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__EnumTermAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getSetComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__VarTermAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getSetComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__EnumTermAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getSetComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetComprehensionTerm__TermWithAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSetComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getTermTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getListComprehensionTermAccess().getTermTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__VarTermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getListComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__EnumTermAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getListComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__VarTermAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getListComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__EnumTermAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getListComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehensionTerm__TermWithAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0()); }
		ruleTerm
		{ after(grammarAccess.getListComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__TermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getTermTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getBagComprehensionTermAccess().getTermTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__VarTermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getBagComprehensionTermAccess().getVarTermVariableTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__EnumTermAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getBagComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__VarTermAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getBagComprehensionTermAccess().getVarTermVariableTermParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__EnumTermAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getBagComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagComprehensionTerm__TermWithAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0()); }
		ruleTerm
		{ after(grammarAccess.getBagComprehensionTermAccess().getTermWithTermParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Term1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getTerm1TermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getTerm1TermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__Term2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getTerm2TermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getTerm2TermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__VarTermAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getVarTermVariableTermParserRuleCall_6_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getVarTermVariableTermParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__EnumTermAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_8_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__VarTermAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getVarTermVariableTermParserRuleCall_9_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getVarTermVariableTermParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__EnumTermAssignment_9_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_9_3_0()); }
		ruleEnumerableTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getEnumTermEnumerableTermParserRuleCall_9_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapComprehensionTerm__TermWithAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapComprehensionTermAccess().getTermWithTermParserRuleCall_10_1_0()); }
		ruleTerm
		{ after(grammarAccess.getMapComprehensionTermAccess().getTermWithTermParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberRangeTermAccess().getStartTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getNumberRangeTermAccess().getStartTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberRangeTermAccess().getEndTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getNumberRangeTermAccess().getEndTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberRangeTerm__StepAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberRangeTermAccess().getStepTermParserRuleCall_5_1_0()); }
		ruleTerm
		{ after(grammarAccess.getNumberRangeTermAccess().getStepTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__TermAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getTermTermParserRuleCall_0_2_0()); }
		ruleTerm
		{ after(grammarAccess.getSetTermAccess().getTermTermParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__TermAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSetTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__TermAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTermAccess().getTermTermParserRuleCall_0_2_0()); }
		ruleTerm
		{ after(grammarAccess.getListTermAccess().getTermTermParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__TermAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getListTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__TermAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getTermTermParserRuleCall_0_2_0()); }
		ruleTerm
		{ after(grammarAccess.getBagTermAccess().getTermTermParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__TermAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getBagTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_2_0_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_2_2_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_0_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_3_3_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_0_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getTextSTNTerminalRuleCall_1_0()); }
		RULE_STN
		{ after(grammarAccess.getStringLiteralAccess().getTextSTNTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharLiteralAccess().getTextSTNTerminalRuleCall_1_0()); }
		RULE_STN
		{ after(grammarAccess.getCharLiteralAccess().getTextSTNTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getTypeSETKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getStructuredDomainAccess().getTypeSETKeyword_0_1_0()); }
			'SET'
			{ after(grammarAccess.getStructuredDomainAccess().getTypeSETKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getStructuredDomainAccess().getTypeSETKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__DomainSetAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getDomainSetDomainParserRuleCall_0_2_1_0()); }
		ruleDomain
		{ after(grammarAccess.getStructuredDomainAccess().getDomainSetDomainParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getTypeBAGKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getStructuredDomainAccess().getTypeBAGKeyword_1_0_0()); }
			'BAG'
			{ after(grammarAccess.getStructuredDomainAccess().getTypeBAGKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getStructuredDomainAccess().getTypeBAGKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__DomainBagAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getDomainBagDomainParserRuleCall_1_1_1_0()); }
		ruleDomain
		{ after(grammarAccess.getStructuredDomainAccess().getDomainBagDomainParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getTypeLISTKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getStructuredDomainAccess().getTypeLISTKeyword_2_0_0()); }
			'LIST'
			{ after(grammarAccess.getStructuredDomainAccess().getTypeLISTKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getStructuredDomainAccess().getTypeLISTKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__DomainListAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getDomainListDomainParserRuleCall_2_1_1_0()); }
		ruleDomain
		{ after(grammarAccess.getStructuredDomainAccess().getDomainListDomainParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__TypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getTypeMAPKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getStructuredDomainAccess().getTypeMAPKeyword_3_0_0()); }
			'MAP'
			{ after(grammarAccess.getStructuredDomainAccess().getTypeMAPKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getStructuredDomainAccess().getTypeMAPKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__DomainMapAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getDomainMapDomainParserRuleCall_3_1_1_0()); }
		ruleDomain
		{ after(grammarAccess.getStructuredDomainAccess().getDomainMapDomainParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredDomain__DomainMapAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredDomainAccess().getDomainMapDomainParserRuleCall_3_1_3_0()); }
		ruleDomain
		{ after(grammarAccess.getStructuredDomainAccess().getDomainMapDomainParserRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendableDomainAccess().getTypeANYKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getExtendableDomainAccess().getTypeANYKeyword_0_1_0()); }
			'ANY'
			{ after(grammarAccess.getExtendableDomainAccess().getTypeANYKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getExtendableDomainAccess().getTypeANYKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendableDomainAccess().getTypeAGENTKeyword_1_0()); }
		(
			{ before(grammarAccess.getExtendableDomainAccess().getTypeAGENTKeyword_1_0()); }
			'AGENT'
			{ after(grammarAccess.getExtendableDomainAccess().getTypeAGENTKeyword_1_0()); }
		)
		{ after(grammarAccess.getExtendableDomainAccess().getTypeAGENTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendableDomain__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendableDomainAccess().getTypeIdDomainParserRuleCall_2_0()); }
		ruleIdDomain
		{ after(grammarAccess.getExtendableDomainAccess().getTypeIdDomainParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicDomain__TypeBasicDomAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicDomainAccess().getTypeBasicDomBasicDomainEnumEnumRuleCall_1_0()); }
		ruleBasicDomainEnum
		{ after(grammarAccess.getBasicDomainAccess().getTypeBasicDomBasicDomainEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueDecAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueDecTK_FLOATTerminalRuleCall_1_0()); }
		RULE_TK_FLOAT
		{ after(grammarAccess.getNumberLiteralAccess().getValueDecTK_FLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__LiteralsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleLiteralAccess().getLiteralsLiteralParserRuleCall_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getTupleLiteralAccess().getLiteralsLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteral__LiteralsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleLiteralAccess().getLiteralsLiteralParserRuleCall_3_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getTupleLiteralAccess().getLiteralsLiteralParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_STN : RULE_STRING;

RULE_TK_FLOAT : ('0'..'9')+ '.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

fragment RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
